
MCU2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001668  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001f8  08001798  08001798  00011798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001990  08001990  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001990  08001990  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001990  08001990  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001990  08001990  00011990  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001994  08001994  00011994  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001998  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000028c  20000064  080019fc  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200002f0  080019fc  000202f0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000721c  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001154  00000000  00000000  000272a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00001abc  00000000  00000000  000283fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000428  00000000  00000000  00029ec0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000370  00000000  00000000  0002a2e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  000014ea  00000000  00000000  0002a658  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   000017a2  00000000  00000000  0002bb42  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    0000705c  00000000  00000000  0002d2e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  00034340  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000dd4  00000000  00000000  000343bc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	08001780 	.word	0x08001780

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	08001780 	.word	0x08001780

08000170 <delay_ms>:
// =======================================================================================
static void HAL_LCD_KICK(void);

// Function to make delay_ms 1ms
static void delay_ms(uint32_t delay)
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
	uint32_t i, j;
	for (i = 0; i < delay; i++)
 8000178:	2300      	movs	r3, #0
 800017a:	60fb      	str	r3, [r7, #12]
 800017c:	e00b      	b.n	8000196 <delay_ms+0x26>
	{
		for (j = 0; j < 255; j++);
 800017e:	2300      	movs	r3, #0
 8000180:	60bb      	str	r3, [r7, #8]
 8000182:	e002      	b.n	800018a <delay_ms+0x1a>
 8000184:	68bb      	ldr	r3, [r7, #8]
 8000186:	3301      	adds	r3, #1
 8000188:	60bb      	str	r3, [r7, #8]
 800018a:	68bb      	ldr	r3, [r7, #8]
 800018c:	2bfe      	cmp	r3, #254	; 0xfe
 800018e:	d9f9      	bls.n	8000184 <delay_ms+0x14>
	for (i = 0; i < delay; i++)
 8000190:	68fb      	ldr	r3, [r7, #12]
 8000192:	3301      	adds	r3, #1
 8000194:	60fb      	str	r3, [r7, #12]
 8000196:	68fa      	ldr	r2, [r7, #12]
 8000198:	687b      	ldr	r3, [r7, #4]
 800019a:	429a      	cmp	r2, r3
 800019c:	d3ef      	bcc.n	800017e <delay_ms+0xe>
	}
}
 800019e:	bf00      	nop
 80001a0:	3714      	adds	r7, #20
 80001a2:	46bd      	mov	sp, r7
 80001a4:	bc80      	pop	{r7}
 80001a6:	4770      	bx	lr

080001a8 <LCD_4BIT_INIT>:
}

#elif LCD_MODE == LCD_4_BIT_MODE

static void LCD_4BIT_INIT(void)
{
 80001a8:	b580      	push	{r7, lr}
 80001aa:	af00      	add	r7, sp, #0
	// ======================= Set CTRL Switches to Output ===================

	// RS_SWITCH is Output with Speed 10 MHz (push-pull) mode
	PinConfig.PIN_number = LCD_RS_PIN;
 80001ac:	4b35      	ldr	r3, [pc, #212]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001ae:	2206      	movs	r2, #6
 80001b0:	801a      	strh	r2, [r3, #0]
	PinConfig.MODE = OUTPUT_PP;
 80001b2:	4b34      	ldr	r3, [pc, #208]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001b4:	2204      	movs	r2, #4
 80001b6:	709a      	strb	r2, [r3, #2]
	PinConfig.SPEED = SPEED_10;
 80001b8:	4b32      	ldr	r3, [pc, #200]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001ba:	2201      	movs	r2, #1
 80001bc:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_init(LCD_RS_PORT, &PinConfig);
 80001be:	4931      	ldr	r1, [pc, #196]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001c0:	4831      	ldr	r0, [pc, #196]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 80001c2:	f000 fb7b 	bl	80008bc <MCAL_GPIO_init>

	//RW_SWITCH is Output with Speed 10 MHz (push-pull) mode
	PinConfig.PIN_number = LCD_RW_PIN;
 80001c6:	4b2f      	ldr	r3, [pc, #188]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001c8:	2205      	movs	r2, #5
 80001ca:	801a      	strh	r2, [r3, #0]
	PinConfig.MODE = OUTPUT_PP;
 80001cc:	4b2d      	ldr	r3, [pc, #180]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001ce:	2204      	movs	r2, #4
 80001d0:	709a      	strb	r2, [r3, #2]
	PinConfig.SPEED = SPEED_10;
 80001d2:	4b2c      	ldr	r3, [pc, #176]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001d4:	2201      	movs	r2, #1
 80001d6:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_init(LCD_RW_PORT, &PinConfig);
 80001d8:	492a      	ldr	r1, [pc, #168]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001da:	482b      	ldr	r0, [pc, #172]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 80001dc:	f000 fb6e 	bl	80008bc <MCAL_GPIO_init>

	//Enable_SWITCH is Output with Speed 10 MHz (push-pull) mode
	PinConfig.PIN_number = LCD_EN_PIN;
 80001e0:	4b28      	ldr	r3, [pc, #160]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001e2:	2204      	movs	r2, #4
 80001e4:	801a      	strh	r2, [r3, #0]
	PinConfig.MODE = OUTPUT_PP;
 80001e6:	4b27      	ldr	r3, [pc, #156]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001e8:	2204      	movs	r2, #4
 80001ea:	709a      	strb	r2, [r3, #2]
	PinConfig.SPEED = SPEED_10;
 80001ec:	4b25      	ldr	r3, [pc, #148]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001ee:	2201      	movs	r2, #1
 80001f0:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_init(LCD_EN_PORT, &PinConfig);
 80001f2:	4924      	ldr	r1, [pc, #144]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001f4:	4824      	ldr	r0, [pc, #144]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 80001f6:	f000 fb61 	bl	80008bc <MCAL_GPIO_init>

	PinConfig.PIN_number = LCD_D4_PIN;
 80001fa:	4b22      	ldr	r3, [pc, #136]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 80001fc:	2200      	movs	r2, #0
 80001fe:	801a      	strh	r2, [r3, #0]
	PinConfig.MODE = OUTPUT_PP;
 8000200:	4b20      	ldr	r3, [pc, #128]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000202:	2204      	movs	r2, #4
 8000204:	709a      	strb	r2, [r3, #2]
	PinConfig.SPEED = SPEED_10;
 8000206:	4b1f      	ldr	r3, [pc, #124]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000208:	2201      	movs	r2, #1
 800020a:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_init(LCD_D4_PORT, &PinConfig);
 800020c:	491d      	ldr	r1, [pc, #116]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 800020e:	481e      	ldr	r0, [pc, #120]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 8000210:	f000 fb54 	bl	80008bc <MCAL_GPIO_init>

	PinConfig.PIN_number = LCD_D5_PIN;
 8000214:	4b1b      	ldr	r3, [pc, #108]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000216:	2201      	movs	r2, #1
 8000218:	801a      	strh	r2, [r3, #0]
	PinConfig.MODE = OUTPUT_PP;
 800021a:	4b1a      	ldr	r3, [pc, #104]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 800021c:	2204      	movs	r2, #4
 800021e:	709a      	strb	r2, [r3, #2]
	PinConfig.SPEED = SPEED_10;
 8000220:	4b18      	ldr	r3, [pc, #96]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000222:	2201      	movs	r2, #1
 8000224:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_init(LCD_D5_PORT, &PinConfig);
 8000226:	4917      	ldr	r1, [pc, #92]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000228:	4817      	ldr	r0, [pc, #92]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 800022a:	f000 fb47 	bl	80008bc <MCAL_GPIO_init>

	PinConfig.PIN_number = LCD_D6_PIN;
 800022e:	4b15      	ldr	r3, [pc, #84]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000230:	2202      	movs	r2, #2
 8000232:	801a      	strh	r2, [r3, #0]
	PinConfig.MODE = OUTPUT_PP;
 8000234:	4b13      	ldr	r3, [pc, #76]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000236:	2204      	movs	r2, #4
 8000238:	709a      	strb	r2, [r3, #2]
	PinConfig.SPEED = SPEED_10;
 800023a:	4b12      	ldr	r3, [pc, #72]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 800023c:	2201      	movs	r2, #1
 800023e:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_init(LCD_D6_PORT, &PinConfig);
 8000240:	4910      	ldr	r1, [pc, #64]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000242:	4811      	ldr	r0, [pc, #68]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 8000244:	f000 fb3a 	bl	80008bc <MCAL_GPIO_init>

	PinConfig.PIN_number = LCD_D7_PIN;
 8000248:	4b0e      	ldr	r3, [pc, #56]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 800024a:	2203      	movs	r2, #3
 800024c:	801a      	strh	r2, [r3, #0]
	PinConfig.MODE = OUTPUT_PP;
 800024e:	4b0d      	ldr	r3, [pc, #52]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000250:	2204      	movs	r2, #4
 8000252:	709a      	strb	r2, [r3, #2]
	PinConfig.SPEED = SPEED_10;
 8000254:	4b0b      	ldr	r3, [pc, #44]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 8000256:	2201      	movs	r2, #1
 8000258:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_init(LCD_D7_PORT, &PinConfig);
 800025a:	490a      	ldr	r1, [pc, #40]	; (8000284 <LCD_4BIT_INIT+0xdc>)
 800025c:	480a      	ldr	r0, [pc, #40]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 800025e:	f000 fb2d 	bl	80008bc <MCAL_GPIO_init>

	// Reset EN_SWITCH PIN
	MCAL_write_PIN(LCD_EN_PORT, LCD_EN_PIN, LOGIC_LOW);
 8000262:	2200      	movs	r2, #0
 8000264:	2104      	movs	r1, #4
 8000266:	4808      	ldr	r0, [pc, #32]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 8000268:	f000 fc10 	bl	8000a8c <MCAL_write_PIN>
	// Reset RS_SWITCH PIN
	MCAL_write_PIN(LCD_RS_PORT, LCD_RS_PIN, LOGIC_LOW);
 800026c:	2200      	movs	r2, #0
 800026e:	2106      	movs	r1, #6
 8000270:	4805      	ldr	r0, [pc, #20]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 8000272:	f000 fc0b 	bl	8000a8c <MCAL_write_PIN>
	// Reset RW_SWITCH PIN
	MCAL_write_PIN(LCD_RW_PORT, LCD_RW_PIN, LOGIC_LOW);
 8000276:	2200      	movs	r2, #0
 8000278:	2105      	movs	r1, #5
 800027a:	4803      	ldr	r0, [pc, #12]	; (8000288 <LCD_4BIT_INIT+0xe0>)
 800027c:	f000 fc06 	bl	8000a8c <MCAL_write_PIN>
}
 8000280:	bf00      	nop
 8000282:	bd80      	pop	{r7, pc}
 8000284:	20000220 	.word	0x20000220
 8000288:	40010800 	.word	0x40010800

0800028c <HAL_4BIT_LCD_KICK>:

static void HAL_4BIT_LCD_KICK(void)
{
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0
	// Set Enable bit
	MCAL_write_PIN(LCD_EN_PORT, LCD_EN_PIN, LOGIC_HIGH);
 8000290:	2201      	movs	r2, #1
 8000292:	2104      	movs	r1, #4
 8000294:	4806      	ldr	r0, [pc, #24]	; (80002b0 <HAL_4BIT_LCD_KICK+0x24>)
 8000296:	f000 fbf9 	bl	8000a8c <MCAL_write_PIN>

	// AC Characteristics : Enable cycle time (R & W ) = 500 ns
	delay_ms(2);
 800029a:	2002      	movs	r0, #2
 800029c:	f7ff ff68 	bl	8000170 <delay_ms>

	// Reset Enable bit
	MCAL_write_PIN(LCD_EN_PORT, LCD_EN_PIN, LOGIC_LOW);
 80002a0:	2200      	movs	r2, #0
 80002a2:	2104      	movs	r1, #4
 80002a4:	4802      	ldr	r0, [pc, #8]	; (80002b0 <HAL_4BIT_LCD_KICK+0x24>)
 80002a6:	f000 fbf1 	bl	8000a8c <MCAL_write_PIN>
}
 80002aa:	bf00      	nop
 80002ac:	bd80      	pop	{r7, pc}
 80002ae:	bf00      	nop
 80002b0:	40010800 	.word	0x40010800

080002b4 <HAL_LCD_CLEAR_SCREEN>:
// =============================== APIs Functions Definitions ============================
// =======================================================================================

// Function to clear screen of LCD
void HAL_LCD_CLEAR_SCREEN(void)
{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	af00      	add	r7, sp, #0
	HAL_LCD_WRITE_COMMAND(LCD_CMD_CLEAR_SCREEN);
 80002b8:	2001      	movs	r0, #1
 80002ba:	f000 f841 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
}
 80002be:	bf00      	nop
 80002c0:	bd80      	pop	{r7, pc}

080002c2 <HAL_LCD_GOTO_XY>:

void HAL_LCD_GOTO_XY(uint8_t line, uint8_t position)
{
 80002c2:	b580      	push	{r7, lr}
 80002c4:	b082      	sub	sp, #8
 80002c6:	af00      	add	r7, sp, #0
 80002c8:	4603      	mov	r3, r0
 80002ca:	460a      	mov	r2, r1
 80002cc:	71fb      	strb	r3, [r7, #7]
 80002ce:	4613      	mov	r3, r2
 80002d0:	71bb      	strb	r3, [r7, #6]
	if (line == 1)
 80002d2:	79fb      	ldrb	r3, [r7, #7]
 80002d4:	2b01      	cmp	r3, #1
 80002d6:	d108      	bne.n	80002ea <HAL_LCD_GOTO_XY+0x28>
	{
		if (position < 16 && position >= 0)
 80002d8:	79bb      	ldrb	r3, [r7, #6]
 80002da:	2b0f      	cmp	r3, #15
 80002dc:	d805      	bhi.n	80002ea <HAL_LCD_GOTO_XY+0x28>
		{
			HAL_LCD_WRITE_COMMAND(LCD_CMD_BEGIN_AT_FIRST_ROW + position);
 80002de:	79bb      	ldrb	r3, [r7, #6]
 80002e0:	3b80      	subs	r3, #128	; 0x80
 80002e2:	b2db      	uxtb	r3, r3
 80002e4:	4618      	mov	r0, r3
 80002e6:	f000 f82b 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
		}
	}
	if (line == 2)
 80002ea:	79fb      	ldrb	r3, [r7, #7]
 80002ec:	2b02      	cmp	r3, #2
 80002ee:	d108      	bne.n	8000302 <HAL_LCD_GOTO_XY+0x40>
	{
		if (position < 16 && position >= 0)
 80002f0:	79bb      	ldrb	r3, [r7, #6]
 80002f2:	2b0f      	cmp	r3, #15
 80002f4:	d805      	bhi.n	8000302 <HAL_LCD_GOTO_XY+0x40>
		{
			HAL_LCD_WRITE_COMMAND(LCD_CMD_BEGIN_AT_SECOND_ROW + position);
 80002f6:	79bb      	ldrb	r3, [r7, #6]
 80002f8:	3b40      	subs	r3, #64	; 0x40
 80002fa:	b2db      	uxtb	r3, r3
 80002fc:	4618      	mov	r0, r3
 80002fe:	f000 f81f 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
		}
	}
}
 8000302:	bf00      	nop
 8000304:	3708      	adds	r7, #8
 8000306:	46bd      	mov	sp, r7
 8000308:	bd80      	pop	{r7, pc}

0800030a <HAL_LCD_INIT>:

void HAL_LCD_INIT(void)
{
 800030a:	b580      	push	{r7, lr}
 800030c:	af00      	add	r7, sp, #0
	HAL_LCD_WRITE_COMMAND(LCD_CMD_FUNCTION_8BIT_2LINES);
	HAL_LCD_WRITE_COMMAND(LCD_CMD_ENTRY_MODE);
	HAL_LCD_WRITE_COMMAND(LCD_CMD_BEGIN_AT_FIRST_ROW);
	HAL_LCD_WRITE_COMMAND(LCD_CMD_DISP_ON_CURSOR_BLINK);
#elif LCD_MODE == LCD_4_BIT_MODE
	delay_ms(20);
 800030e:	2014      	movs	r0, #20
 8000310:	f7ff ff2e 	bl	8000170 <delay_ms>
	LCD_4BIT_INIT();
 8000314:	f7ff ff48 	bl	80001a8 <LCD_4BIT_INIT>
	delay_ms(15);
 8000318:	200f      	movs	r0, #15
 800031a:	f7ff ff29 	bl	8000170 <delay_ms>
	HAL_LCD_WRITE_COMMAND(0x02); // As data sheet
 800031e:	2002      	movs	r0, #2
 8000320:	f000 f80e 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
	HAL_LCD_WRITE_COMMAND(LCD_CMD_FUNCTION_4BIT_2LINES);
 8000324:	2028      	movs	r0, #40	; 0x28
 8000326:	f000 f80b 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
	HAL_LCD_WRITE_COMMAND(LCD_CMD_ENTRY_MODE);
 800032a:	2006      	movs	r0, #6
 800032c:	f000 f808 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
	HAL_LCD_WRITE_COMMAND(LCD_CMD_BEGIN_AT_FIRST_ROW);
 8000330:	2080      	movs	r0, #128	; 0x80
 8000332:	f000 f805 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
	HAL_LCD_WRITE_COMMAND(LCD_CMD_DISP_ON_CURSOR_BLINK);
 8000336:	200f      	movs	r0, #15
 8000338:	f000 f802 	bl	8000340 <HAL_LCD_WRITE_COMMAND>
#endif
}
 800033c:	bf00      	nop
 800033e:	bd80      	pop	{r7, pc}

08000340 <HAL_LCD_WRITE_COMMAND>:
#endif
}

// Function to write commands for LCD
void HAL_LCD_WRITE_COMMAND(uint8_t command)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b082      	sub	sp, #8
 8000344:	af00      	add	r7, sp, #0
 8000346:	4603      	mov	r3, r0
 8000348:	71fb      	strb	r3, [r7, #7]

#elif LCD_MODE == LCD_4_BIT_MODE
	/* ====== LCD is in 4 bit Mode ====== */

	// Send last four bits of command
    MCAL_write_PIN(LCD_D4_PORT, LCD_D4_PIN, (command >> 4) & 0x01);
 800034a:	79fb      	ldrb	r3, [r7, #7]
 800034c:	091b      	lsrs	r3, r3, #4
 800034e:	b2db      	uxtb	r3, r3
 8000350:	f003 0301 	and.w	r3, r3, #1
 8000354:	b2db      	uxtb	r3, r3
 8000356:	461a      	mov	r2, r3
 8000358:	2100      	movs	r1, #0
 800035a:	4833      	ldr	r0, [pc, #204]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 800035c:	f000 fb96 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D5_PORT, LCD_D5_PIN, (command >> 5) & 0x01);
 8000360:	79fb      	ldrb	r3, [r7, #7]
 8000362:	095b      	lsrs	r3, r3, #5
 8000364:	b2db      	uxtb	r3, r3
 8000366:	f003 0301 	and.w	r3, r3, #1
 800036a:	b2db      	uxtb	r3, r3
 800036c:	461a      	mov	r2, r3
 800036e:	2101      	movs	r1, #1
 8000370:	482d      	ldr	r0, [pc, #180]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 8000372:	f000 fb8b 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D6_PORT, LCD_D6_PIN, (command >> 6) & 0x01);
 8000376:	79fb      	ldrb	r3, [r7, #7]
 8000378:	099b      	lsrs	r3, r3, #6
 800037a:	b2db      	uxtb	r3, r3
 800037c:	f003 0301 	and.w	r3, r3, #1
 8000380:	b2db      	uxtb	r3, r3
 8000382:	461a      	mov	r2, r3
 8000384:	2102      	movs	r1, #2
 8000386:	4828      	ldr	r0, [pc, #160]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 8000388:	f000 fb80 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D7_PORT, LCD_D7_PIN, (command >> 7) & 0x01);
 800038c:	79fb      	ldrb	r3, [r7, #7]
 800038e:	09db      	lsrs	r3, r3, #7
 8000390:	b2db      	uxtb	r3, r3
 8000392:	461a      	mov	r2, r3
 8000394:	2103      	movs	r1, #3
 8000396:	4824      	ldr	r0, [pc, #144]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 8000398:	f000 fb78 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RW_PORT, LCD_RW_PIN, LOGIC_LOW);
 800039c:	2200      	movs	r2, #0
 800039e:	2105      	movs	r1, #5
 80003a0:	4821      	ldr	r0, [pc, #132]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 80003a2:	f000 fb73 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RS_PORT, LCD_RS_PIN, LOGIC_LOW);
 80003a6:	2200      	movs	r2, #0
 80003a8:	2106      	movs	r1, #6
 80003aa:	481f      	ldr	r0, [pc, #124]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 80003ac:	f000 fb6e 	bl	8000a8c <MCAL_write_PIN>
	HAL_4BIT_LCD_KICK();
 80003b0:	f7ff ff6c 	bl	800028c <HAL_4BIT_LCD_KICK>

	// Send first four bits of command
	MCAL_write_PIN(LCD_D4_PORT, LCD_D4_PIN, (command >> 0) & 0x01);
 80003b4:	79fb      	ldrb	r3, [r7, #7]
 80003b6:	f003 0301 	and.w	r3, r3, #1
 80003ba:	b2db      	uxtb	r3, r3
 80003bc:	461a      	mov	r2, r3
 80003be:	2100      	movs	r1, #0
 80003c0:	4819      	ldr	r0, [pc, #100]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 80003c2:	f000 fb63 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_D5_PORT, LCD_D5_PIN, (command >> 1) & 0x01);
 80003c6:	79fb      	ldrb	r3, [r7, #7]
 80003c8:	085b      	lsrs	r3, r3, #1
 80003ca:	b2db      	uxtb	r3, r3
 80003cc:	f003 0301 	and.w	r3, r3, #1
 80003d0:	b2db      	uxtb	r3, r3
 80003d2:	461a      	mov	r2, r3
 80003d4:	2101      	movs	r1, #1
 80003d6:	4814      	ldr	r0, [pc, #80]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 80003d8:	f000 fb58 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_D6_PORT, LCD_D6_PIN, (command >> 2) & 0x01);
 80003dc:	79fb      	ldrb	r3, [r7, #7]
 80003de:	089b      	lsrs	r3, r3, #2
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	f003 0301 	and.w	r3, r3, #1
 80003e6:	b2db      	uxtb	r3, r3
 80003e8:	461a      	mov	r2, r3
 80003ea:	2102      	movs	r1, #2
 80003ec:	480e      	ldr	r0, [pc, #56]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 80003ee:	f000 fb4d 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_D7_PORT, LCD_D7_PIN, (command >> 3) & 0x01);
 80003f2:	79fb      	ldrb	r3, [r7, #7]
 80003f4:	08db      	lsrs	r3, r3, #3
 80003f6:	b2db      	uxtb	r3, r3
 80003f8:	f003 0301 	and.w	r3, r3, #1
 80003fc:	b2db      	uxtb	r3, r3
 80003fe:	461a      	mov	r2, r3
 8000400:	2103      	movs	r1, #3
 8000402:	4809      	ldr	r0, [pc, #36]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 8000404:	f000 fb42 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RW_PORT, LCD_RW_PIN, LOGIC_LOW);
 8000408:	2200      	movs	r2, #0
 800040a:	2105      	movs	r1, #5
 800040c:	4806      	ldr	r0, [pc, #24]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 800040e:	f000 fb3d 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RS_PORT, LCD_RS_PIN, LOGIC_LOW);
 8000412:	2200      	movs	r2, #0
 8000414:	2106      	movs	r1, #6
 8000416:	4804      	ldr	r0, [pc, #16]	; (8000428 <HAL_LCD_WRITE_COMMAND+0xe8>)
 8000418:	f000 fb38 	bl	8000a8c <MCAL_write_PIN>
	HAL_4BIT_LCD_KICK();
 800041c:	f7ff ff36 	bl	800028c <HAL_4BIT_LCD_KICK>
#endif

}
 8000420:	bf00      	nop
 8000422:	3708      	adds	r7, #8
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	40010800 	.word	0x40010800

0800042c <HAL_LCD_WRITE_CHAR>:

void HAL_LCD_WRITE_CHAR(uint8_t character)
{
 800042c:	b580      	push	{r7, lr}
 800042e:	b082      	sub	sp, #8
 8000430:	af00      	add	r7, sp, #0
 8000432:	4603      	mov	r3, r0
 8000434:	71fb      	strb	r3, [r7, #7]
#elif LCD_MODE == LCD_4_BIT_MODE
	/* ====== LCD is in 4 bit Mode ====== */


	// Send last four bits of command
    MCAL_write_PIN(LCD_D4_PORT, LCD_D4_PIN, (character >> 4) & 0x01);
 8000436:	79fb      	ldrb	r3, [r7, #7]
 8000438:	091b      	lsrs	r3, r3, #4
 800043a:	b2db      	uxtb	r3, r3
 800043c:	f003 0301 	and.w	r3, r3, #1
 8000440:	b2db      	uxtb	r3, r3
 8000442:	461a      	mov	r2, r3
 8000444:	2100      	movs	r1, #0
 8000446:	4833      	ldr	r0, [pc, #204]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 8000448:	f000 fb20 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D5_PORT, LCD_D5_PIN, (character >> 5) & 0x01);
 800044c:	79fb      	ldrb	r3, [r7, #7]
 800044e:	095b      	lsrs	r3, r3, #5
 8000450:	b2db      	uxtb	r3, r3
 8000452:	f003 0301 	and.w	r3, r3, #1
 8000456:	b2db      	uxtb	r3, r3
 8000458:	461a      	mov	r2, r3
 800045a:	2101      	movs	r1, #1
 800045c:	482d      	ldr	r0, [pc, #180]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 800045e:	f000 fb15 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D6_PORT, LCD_D6_PIN, (character >> 6) & 0x01);
 8000462:	79fb      	ldrb	r3, [r7, #7]
 8000464:	099b      	lsrs	r3, r3, #6
 8000466:	b2db      	uxtb	r3, r3
 8000468:	f003 0301 	and.w	r3, r3, #1
 800046c:	b2db      	uxtb	r3, r3
 800046e:	461a      	mov	r2, r3
 8000470:	2102      	movs	r1, #2
 8000472:	4828      	ldr	r0, [pc, #160]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 8000474:	f000 fb0a 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D7_PORT, LCD_D7_PIN, (character >> 7) & 0x01);
 8000478:	79fb      	ldrb	r3, [r7, #7]
 800047a:	09db      	lsrs	r3, r3, #7
 800047c:	b2db      	uxtb	r3, r3
 800047e:	461a      	mov	r2, r3
 8000480:	2103      	movs	r1, #3
 8000482:	4824      	ldr	r0, [pc, #144]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 8000484:	f000 fb02 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RW_PORT, LCD_RW_PIN, LOGIC_LOW);
 8000488:	2200      	movs	r2, #0
 800048a:	2105      	movs	r1, #5
 800048c:	4821      	ldr	r0, [pc, #132]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 800048e:	f000 fafd 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RS_PORT, LCD_RS_PIN, LOGIC_HIGH);
 8000492:	2201      	movs	r2, #1
 8000494:	2106      	movs	r1, #6
 8000496:	481f      	ldr	r0, [pc, #124]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 8000498:	f000 faf8 	bl	8000a8c <MCAL_write_PIN>
	HAL_4BIT_LCD_KICK();
 800049c:	f7ff fef6 	bl	800028c <HAL_4BIT_LCD_KICK>

	// Send first four bits of command
    MCAL_write_PIN(LCD_D4_PORT, LCD_D4_PIN, (character >> 0) & 0x01);
 80004a0:	79fb      	ldrb	r3, [r7, #7]
 80004a2:	f003 0301 	and.w	r3, r3, #1
 80004a6:	b2db      	uxtb	r3, r3
 80004a8:	461a      	mov	r2, r3
 80004aa:	2100      	movs	r1, #0
 80004ac:	4819      	ldr	r0, [pc, #100]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 80004ae:	f000 faed 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D5_PORT, LCD_D5_PIN, (character >> 1) & 0x01);
 80004b2:	79fb      	ldrb	r3, [r7, #7]
 80004b4:	085b      	lsrs	r3, r3, #1
 80004b6:	b2db      	uxtb	r3, r3
 80004b8:	f003 0301 	and.w	r3, r3, #1
 80004bc:	b2db      	uxtb	r3, r3
 80004be:	461a      	mov	r2, r3
 80004c0:	2101      	movs	r1, #1
 80004c2:	4814      	ldr	r0, [pc, #80]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 80004c4:	f000 fae2 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D6_PORT, LCD_D6_PIN, (character >> 2) & 0x01);
 80004c8:	79fb      	ldrb	r3, [r7, #7]
 80004ca:	089b      	lsrs	r3, r3, #2
 80004cc:	b2db      	uxtb	r3, r3
 80004ce:	f003 0301 	and.w	r3, r3, #1
 80004d2:	b2db      	uxtb	r3, r3
 80004d4:	461a      	mov	r2, r3
 80004d6:	2102      	movs	r1, #2
 80004d8:	480e      	ldr	r0, [pc, #56]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 80004da:	f000 fad7 	bl	8000a8c <MCAL_write_PIN>
    MCAL_write_PIN(LCD_D7_PORT, LCD_D7_PIN, (character >> 3) & 0x01);
 80004de:	79fb      	ldrb	r3, [r7, #7]
 80004e0:	08db      	lsrs	r3, r3, #3
 80004e2:	b2db      	uxtb	r3, r3
 80004e4:	f003 0301 	and.w	r3, r3, #1
 80004e8:	b2db      	uxtb	r3, r3
 80004ea:	461a      	mov	r2, r3
 80004ec:	2103      	movs	r1, #3
 80004ee:	4809      	ldr	r0, [pc, #36]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 80004f0:	f000 facc 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RW_PORT, LCD_RW_PIN, LOGIC_LOW);
 80004f4:	2200      	movs	r2, #0
 80004f6:	2105      	movs	r1, #5
 80004f8:	4806      	ldr	r0, [pc, #24]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 80004fa:	f000 fac7 	bl	8000a8c <MCAL_write_PIN>
	MCAL_write_PIN(LCD_RS_PORT, LCD_RS_PIN, LOGIC_HIGH);
 80004fe:	2201      	movs	r2, #1
 8000500:	2106      	movs	r1, #6
 8000502:	4804      	ldr	r0, [pc, #16]	; (8000514 <HAL_LCD_WRITE_CHAR+0xe8>)
 8000504:	f000 fac2 	bl	8000a8c <MCAL_write_PIN>
	HAL_4BIT_LCD_KICK();
 8000508:	f7ff fec0 	bl	800028c <HAL_4BIT_LCD_KICK>
#endif

}
 800050c:	bf00      	nop
 800050e:	3708      	adds	r7, #8
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}
 8000514:	40010800 	.word	0x40010800

08000518 <HAL_LCD_WRITE_STRING>:

void HAL_LCD_WRITE_STRING(char* string)
{
 8000518:	b580      	push	{r7, lr}
 800051a:	b084      	sub	sp, #16
 800051c:	af00      	add	r7, sp, #0
 800051e:	6078      	str	r0, [r7, #4]
	// Counter to avoid writing bigger word size than LCD screen
	int count = 0;
 8000520:	2300      	movs	r3, #0
 8000522:	60fb      	str	r3, [r7, #12]
	while (*string > 0)
 8000524:	e01c      	b.n	8000560 <HAL_LCD_WRITE_STRING+0x48>
	{
		count++;
 8000526:	68fb      	ldr	r3, [r7, #12]
 8000528:	3301      	adds	r3, #1
 800052a:	60fb      	str	r3, [r7, #12]
		HAL_LCD_WRITE_CHAR(*string++);
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	1c5a      	adds	r2, r3, #1
 8000530:	607a      	str	r2, [r7, #4]
 8000532:	781b      	ldrb	r3, [r3, #0]
 8000534:	4618      	mov	r0, r3
 8000536:	f7ff ff79 	bl	800042c <HAL_LCD_WRITE_CHAR>
		if (count == 40) // Counter reached the end of the first row
 800053a:	68fb      	ldr	r3, [r7, #12]
 800053c:	2b28      	cmp	r3, #40	; 0x28
 800053e:	d104      	bne.n	800054a <HAL_LCD_WRITE_STRING+0x32>
		{
			HAL_LCD_GOTO_XY(2, 0); // Line : row num 2 , starts from position 0
 8000540:	2100      	movs	r1, #0
 8000542:	2002      	movs	r0, #2
 8000544:	f7ff febd 	bl	80002c2 <HAL_LCD_GOTO_XY>
 8000548:	e00a      	b.n	8000560 <HAL_LCD_WRITE_STRING+0x48>
		} else if (count == 80)
 800054a:	68fb      	ldr	r3, [r7, #12]
 800054c:	2b50      	cmp	r3, #80	; 0x50
 800054e:	d107      	bne.n	8000560 <HAL_LCD_WRITE_STRING+0x48>
		{
			HAL_LCD_CLEAR_SCREEN();
 8000550:	f7ff feb0 	bl	80002b4 <HAL_LCD_CLEAR_SCREEN>
			HAL_LCD_GOTO_XY(1, 0); // go to line 1 , position 0
 8000554:	2100      	movs	r1, #0
 8000556:	2001      	movs	r0, #1
 8000558:	f7ff feb3 	bl	80002c2 <HAL_LCD_GOTO_XY>
			count = 0;
 800055c:	2300      	movs	r3, #0
 800055e:	60fb      	str	r3, [r7, #12]
	while (*string > 0)
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	781b      	ldrb	r3, [r3, #0]
 8000564:	2b00      	cmp	r3, #0
 8000566:	d1de      	bne.n	8000526 <HAL_LCD_WRITE_STRING+0xe>
		}
	}
}
 8000568:	bf00      	nop
 800056a:	3710      	adds	r7, #16
 800056c:	46bd      	mov	sp, r7
 800056e:	bd80      	pop	{r7, pc}

08000570 <dc_motor_initialize>:
 8000570:	b580      	push	{r7, lr}
 8000572:	b082      	sub	sp, #8
 8000574:	af00      	add	r7, sp, #0
 8000576:	6078      	str	r0, [r7, #4]
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681a      	ldr	r2, [r3, #0]
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	3304      	adds	r3, #4
 8000580:	4619      	mov	r1, r3
 8000582:	4610      	mov	r0, r2
 8000584:	f000 f99a 	bl	80008bc <MCAL_GPIO_init>
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681a      	ldr	r2, [r3, #0]
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	3308      	adds	r3, #8
 8000590:	4619      	mov	r1, r3
 8000592:	4610      	mov	r0, r2
 8000594:	f000 f992 	bl	80008bc <MCAL_GPIO_init>
 8000598:	bf00      	nop
 800059a:	3708      	adds	r7, #8
 800059c:	46bd      	mov	sp, r7
 800059e:	bd80      	pop	{r7, pc}

080005a0 <dc_motor_move_right>:
 80005a0:	b580      	push	{r7, lr}
 80005a2:	b082      	sub	sp, #8
 80005a4:	af00      	add	r7, sp, #0
 80005a6:	6078      	str	r0, [r7, #4]
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	6818      	ldr	r0, [r3, #0]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	889b      	ldrh	r3, [r3, #4]
 80005b0:	b29b      	uxth	r3, r3
 80005b2:	2201      	movs	r2, #1
 80005b4:	4619      	mov	r1, r3
 80005b6:	f000 fa69 	bl	8000a8c <MCAL_write_PIN>
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	6818      	ldr	r0, [r3, #0]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	891b      	ldrh	r3, [r3, #8]
 80005c2:	b29b      	uxth	r3, r3
 80005c4:	2200      	movs	r2, #0
 80005c6:	4619      	mov	r1, r3
 80005c8:	f000 fa60 	bl	8000a8c <MCAL_write_PIN>
 80005cc:	bf00      	nop
 80005ce:	3708      	adds	r7, #8
 80005d0:	46bd      	mov	sp, r7
 80005d2:	bd80      	pop	{r7, pc}

080005d4 <dc_motor_stop>:
 80005d4:	b580      	push	{r7, lr}
 80005d6:	b082      	sub	sp, #8
 80005d8:	af00      	add	r7, sp, #0
 80005da:	6078      	str	r0, [r7, #4]
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	6818      	ldr	r0, [r3, #0]
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	889b      	ldrh	r3, [r3, #4]
 80005e4:	b29b      	uxth	r3, r3
 80005e6:	2200      	movs	r2, #0
 80005e8:	4619      	mov	r1, r3
 80005ea:	f000 fa4f 	bl	8000a8c <MCAL_write_PIN>
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	6818      	ldr	r0, [r3, #0]
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	889b      	ldrh	r3, [r3, #4]
 80005f6:	b29b      	uxth	r3, r3
 80005f8:	2200      	movs	r2, #0
 80005fa:	4619      	mov	r1, r3
 80005fc:	f000 fa46 	bl	8000a8c <MCAL_write_PIN>
 8000600:	bf00      	nop
 8000602:	3708      	adds	r7, #8
 8000604:	46bd      	mov	sp, r7
 8000606:	bd80      	pop	{r7, pc}

08000608 <ADC1_2_IRQHandler>:
 8000608:	b580      	push	{r7, lr}
 800060a:	af00      	add	r7, sp, #0
 800060c:	4b13      	ldr	r3, [pc, #76]	; (800065c <ADC1_2_IRQHandler+0x54>)
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000614:	b2db      	uxtb	r3, r3
 8000616:	2b01      	cmp	r3, #1
 8000618:	d10f      	bne.n	800063a <ADC1_2_IRQHandler+0x32>
 800061a:	4b10      	ldr	r3, [pc, #64]	; (800065c <ADC1_2_IRQHandler+0x54>)
 800061c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800061e:	f3c3 0304 	ubfx	r3, r3, #0, #5
 8000622:	b2db      	uxtb	r3, r3
 8000624:	4619      	mov	r1, r3
 8000626:	4a0e      	ldr	r2, [pc, #56]	; (8000660 <ADC1_2_IRQHandler+0x58>)
 8000628:	460b      	mov	r3, r1
 800062a:	005b      	lsls	r3, r3, #1
 800062c:	440b      	add	r3, r1
 800062e:	009b      	lsls	r3, r3, #2
 8000630:	4413      	add	r3, r2
 8000632:	3308      	adds	r3, #8
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	4798      	blx	r3
 8000638:	e00e      	b.n	8000658 <ADC1_2_IRQHandler+0x50>
 800063a:	4b0a      	ldr	r3, [pc, #40]	; (8000664 <ADC1_2_IRQHandler+0x5c>)
 800063c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800063e:	f3c3 0304 	ubfx	r3, r3, #0, #5
 8000642:	b2db      	uxtb	r3, r3
 8000644:	4619      	mov	r1, r3
 8000646:	4a06      	ldr	r2, [pc, #24]	; (8000660 <ADC1_2_IRQHandler+0x58>)
 8000648:	460b      	mov	r3, r1
 800064a:	005b      	lsls	r3, r3, #1
 800064c:	440b      	add	r3, r1
 800064e:	009b      	lsls	r3, r3, #2
 8000650:	4413      	add	r3, r2
 8000652:	33c8      	adds	r3, #200	; 0xc8
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	4798      	blx	r3
 8000658:	bf00      	nop
 800065a:	bd80      	pop	{r7, pc}
 800065c:	40012400 	.word	0x40012400
 8000660:	20000080 	.word	0x20000080
 8000664:	40012800 	.word	0x40012800

08000668 <EXTI0_IRQHandler>:
 8000668:	b580      	push	{r7, lr}
 800066a:	af00      	add	r7, sp, #0
 800066c:	4b05      	ldr	r3, [pc, #20]	; (8000684 <EXTI0_IRQHandler+0x1c>)
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	4798      	blx	r3
 8000672:	4b05      	ldr	r3, [pc, #20]	; (8000688 <EXTI0_IRQHandler+0x20>)
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	4a04      	ldr	r2, [pc, #16]	; (8000688 <EXTI0_IRQHandler+0x20>)
 8000678:	f043 0301 	orr.w	r3, r3, #1
 800067c:	6153      	str	r3, [r2, #20]
 800067e:	bf00      	nop
 8000680:	bd80      	pop	{r7, pc}
 8000682:	bf00      	nop
 8000684:	20000224 	.word	0x20000224
 8000688:	40010400 	.word	0x40010400

0800068c <EXTI1_IRQHandler>:
 800068c:	b580      	push	{r7, lr}
 800068e:	af00      	add	r7, sp, #0
 8000690:	4b05      	ldr	r3, [pc, #20]	; (80006a8 <EXTI1_IRQHandler+0x1c>)
 8000692:	685b      	ldr	r3, [r3, #4]
 8000694:	4798      	blx	r3
 8000696:	4b05      	ldr	r3, [pc, #20]	; (80006ac <EXTI1_IRQHandler+0x20>)
 8000698:	695b      	ldr	r3, [r3, #20]
 800069a:	4a04      	ldr	r2, [pc, #16]	; (80006ac <EXTI1_IRQHandler+0x20>)
 800069c:	f043 0302 	orr.w	r3, r3, #2
 80006a0:	6153      	str	r3, [r2, #20]
 80006a2:	bf00      	nop
 80006a4:	bd80      	pop	{r7, pc}
 80006a6:	bf00      	nop
 80006a8:	20000224 	.word	0x20000224
 80006ac:	40010400 	.word	0x40010400

080006b0 <EXTI2_IRQHandler>:
 80006b0:	b580      	push	{r7, lr}
 80006b2:	af00      	add	r7, sp, #0
 80006b4:	4b05      	ldr	r3, [pc, #20]	; (80006cc <EXTI2_IRQHandler+0x1c>)
 80006b6:	689b      	ldr	r3, [r3, #8]
 80006b8:	4798      	blx	r3
 80006ba:	4b05      	ldr	r3, [pc, #20]	; (80006d0 <EXTI2_IRQHandler+0x20>)
 80006bc:	695b      	ldr	r3, [r3, #20]
 80006be:	4a04      	ldr	r2, [pc, #16]	; (80006d0 <EXTI2_IRQHandler+0x20>)
 80006c0:	f043 0304 	orr.w	r3, r3, #4
 80006c4:	6153      	str	r3, [r2, #20]
 80006c6:	bf00      	nop
 80006c8:	bd80      	pop	{r7, pc}
 80006ca:	bf00      	nop
 80006cc:	20000224 	.word	0x20000224
 80006d0:	40010400 	.word	0x40010400

080006d4 <EXTI3_IRQHandler>:
 80006d4:	b580      	push	{r7, lr}
 80006d6:	af00      	add	r7, sp, #0
 80006d8:	4b05      	ldr	r3, [pc, #20]	; (80006f0 <EXTI3_IRQHandler+0x1c>)
 80006da:	68db      	ldr	r3, [r3, #12]
 80006dc:	4798      	blx	r3
 80006de:	4b05      	ldr	r3, [pc, #20]	; (80006f4 <EXTI3_IRQHandler+0x20>)
 80006e0:	695b      	ldr	r3, [r3, #20]
 80006e2:	4a04      	ldr	r2, [pc, #16]	; (80006f4 <EXTI3_IRQHandler+0x20>)
 80006e4:	f043 0308 	orr.w	r3, r3, #8
 80006e8:	6153      	str	r3, [r2, #20]
 80006ea:	bf00      	nop
 80006ec:	bd80      	pop	{r7, pc}
 80006ee:	bf00      	nop
 80006f0:	20000224 	.word	0x20000224
 80006f4:	40010400 	.word	0x40010400

080006f8 <EXTI4_IRQHandler>:
 80006f8:	b580      	push	{r7, lr}
 80006fa:	af00      	add	r7, sp, #0
 80006fc:	4b05      	ldr	r3, [pc, #20]	; (8000714 <EXTI4_IRQHandler+0x1c>)
 80006fe:	691b      	ldr	r3, [r3, #16]
 8000700:	4798      	blx	r3
 8000702:	4b05      	ldr	r3, [pc, #20]	; (8000718 <EXTI4_IRQHandler+0x20>)
 8000704:	695b      	ldr	r3, [r3, #20]
 8000706:	4a04      	ldr	r2, [pc, #16]	; (8000718 <EXTI4_IRQHandler+0x20>)
 8000708:	f043 0310 	orr.w	r3, r3, #16
 800070c:	6153      	str	r3, [r2, #20]
 800070e:	bf00      	nop
 8000710:	bd80      	pop	{r7, pc}
 8000712:	bf00      	nop
 8000714:	20000224 	.word	0x20000224
 8000718:	40010400 	.word	0x40010400

0800071c <EXTI9_5_IRQHandler>:
 800071c:	b580      	push	{r7, lr}
 800071e:	af00      	add	r7, sp, #0
 8000720:	4b26      	ldr	r3, [pc, #152]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 8000722:	695b      	ldr	r3, [r3, #20]
 8000724:	f003 0320 	and.w	r3, r3, #32
 8000728:	2b00      	cmp	r3, #0
 800072a:	d008      	beq.n	800073e <EXTI9_5_IRQHandler+0x22>
 800072c:	4b23      	ldr	r3, [pc, #140]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800072e:	695b      	ldr	r3, [r3, #20]
 8000730:	4a22      	ldr	r2, [pc, #136]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 8000732:	f043 0320 	orr.w	r3, r3, #32
 8000736:	6153      	str	r3, [r2, #20]
 8000738:	4b21      	ldr	r3, [pc, #132]	; (80007c0 <EXTI9_5_IRQHandler+0xa4>)
 800073a:	695b      	ldr	r3, [r3, #20]
 800073c:	4798      	blx	r3
 800073e:	4b1f      	ldr	r3, [pc, #124]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 8000740:	695b      	ldr	r3, [r3, #20]
 8000742:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000746:	2b00      	cmp	r3, #0
 8000748:	d008      	beq.n	800075c <EXTI9_5_IRQHandler+0x40>
 800074a:	4b1c      	ldr	r3, [pc, #112]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800074c:	695b      	ldr	r3, [r3, #20]
 800074e:	4a1b      	ldr	r2, [pc, #108]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 8000750:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000754:	6153      	str	r3, [r2, #20]
 8000756:	4b1a      	ldr	r3, [pc, #104]	; (80007c0 <EXTI9_5_IRQHandler+0xa4>)
 8000758:	699b      	ldr	r3, [r3, #24]
 800075a:	4798      	blx	r3
 800075c:	4b17      	ldr	r3, [pc, #92]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800075e:	695b      	ldr	r3, [r3, #20]
 8000760:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000764:	2b00      	cmp	r3, #0
 8000766:	d008      	beq.n	800077a <EXTI9_5_IRQHandler+0x5e>
 8000768:	4b14      	ldr	r3, [pc, #80]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800076a:	695b      	ldr	r3, [r3, #20]
 800076c:	4a13      	ldr	r2, [pc, #76]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800076e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000772:	6153      	str	r3, [r2, #20]
 8000774:	4b12      	ldr	r3, [pc, #72]	; (80007c0 <EXTI9_5_IRQHandler+0xa4>)
 8000776:	69db      	ldr	r3, [r3, #28]
 8000778:	4798      	blx	r3
 800077a:	4b10      	ldr	r3, [pc, #64]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800077c:	695b      	ldr	r3, [r3, #20]
 800077e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000782:	2b00      	cmp	r3, #0
 8000784:	d008      	beq.n	8000798 <EXTI9_5_IRQHandler+0x7c>
 8000786:	4b0d      	ldr	r3, [pc, #52]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 8000788:	695b      	ldr	r3, [r3, #20]
 800078a:	4a0c      	ldr	r2, [pc, #48]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800078c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000790:	6153      	str	r3, [r2, #20]
 8000792:	4b0b      	ldr	r3, [pc, #44]	; (80007c0 <EXTI9_5_IRQHandler+0xa4>)
 8000794:	6a1b      	ldr	r3, [r3, #32]
 8000796:	4798      	blx	r3
 8000798:	4b08      	ldr	r3, [pc, #32]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 800079a:	695b      	ldr	r3, [r3, #20]
 800079c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80007a0:	2b00      	cmp	r3, #0
 80007a2:	d008      	beq.n	80007b6 <EXTI9_5_IRQHandler+0x9a>
 80007a4:	4b05      	ldr	r3, [pc, #20]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 80007a6:	695b      	ldr	r3, [r3, #20]
 80007a8:	4a04      	ldr	r2, [pc, #16]	; (80007bc <EXTI9_5_IRQHandler+0xa0>)
 80007aa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80007ae:	6153      	str	r3, [r2, #20]
 80007b0:	4b03      	ldr	r3, [pc, #12]	; (80007c0 <EXTI9_5_IRQHandler+0xa4>)
 80007b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80007b4:	4798      	blx	r3
 80007b6:	bf00      	nop
 80007b8:	bd80      	pop	{r7, pc}
 80007ba:	bf00      	nop
 80007bc:	40010400 	.word	0x40010400
 80007c0:	20000224 	.word	0x20000224

080007c4 <EXTI15_10_IRQHandler>:
 80007c4:	b580      	push	{r7, lr}
 80007c6:	af00      	add	r7, sp, #0
 80007c8:	4b2d      	ldr	r3, [pc, #180]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 80007ca:	695b      	ldr	r3, [r3, #20]
 80007cc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80007d0:	2b00      	cmp	r3, #0
 80007d2:	d008      	beq.n	80007e6 <EXTI15_10_IRQHandler+0x22>
 80007d4:	4b2a      	ldr	r3, [pc, #168]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 80007d6:	695b      	ldr	r3, [r3, #20]
 80007d8:	4a29      	ldr	r2, [pc, #164]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 80007da:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80007de:	6153      	str	r3, [r2, #20]
 80007e0:	4b28      	ldr	r3, [pc, #160]	; (8000884 <EXTI15_10_IRQHandler+0xc0>)
 80007e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80007e4:	4798      	blx	r3
 80007e6:	4b26      	ldr	r3, [pc, #152]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 80007e8:	695b      	ldr	r3, [r3, #20]
 80007ea:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80007ee:	2b00      	cmp	r3, #0
 80007f0:	d008      	beq.n	8000804 <EXTI15_10_IRQHandler+0x40>
 80007f2:	4b23      	ldr	r3, [pc, #140]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 80007f4:	695b      	ldr	r3, [r3, #20]
 80007f6:	4a22      	ldr	r2, [pc, #136]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 80007f8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80007fc:	6153      	str	r3, [r2, #20]
 80007fe:	4b21      	ldr	r3, [pc, #132]	; (8000884 <EXTI15_10_IRQHandler+0xc0>)
 8000800:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000802:	4798      	blx	r3
 8000804:	4b1e      	ldr	r3, [pc, #120]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000806:	695b      	ldr	r3, [r3, #20]
 8000808:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800080c:	2b00      	cmp	r3, #0
 800080e:	d008      	beq.n	8000822 <EXTI15_10_IRQHandler+0x5e>
 8000810:	4b1b      	ldr	r3, [pc, #108]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000812:	695b      	ldr	r3, [r3, #20]
 8000814:	4a1a      	ldr	r2, [pc, #104]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000816:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800081a:	6153      	str	r3, [r2, #20]
 800081c:	4b19      	ldr	r3, [pc, #100]	; (8000884 <EXTI15_10_IRQHandler+0xc0>)
 800081e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000820:	4798      	blx	r3
 8000822:	4b17      	ldr	r3, [pc, #92]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000824:	695b      	ldr	r3, [r3, #20]
 8000826:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800082a:	2b00      	cmp	r3, #0
 800082c:	d008      	beq.n	8000840 <EXTI15_10_IRQHandler+0x7c>
 800082e:	4b14      	ldr	r3, [pc, #80]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000830:	695b      	ldr	r3, [r3, #20]
 8000832:	4a13      	ldr	r2, [pc, #76]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000834:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000838:	6153      	str	r3, [r2, #20]
 800083a:	4b12      	ldr	r3, [pc, #72]	; (8000884 <EXTI15_10_IRQHandler+0xc0>)
 800083c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800083e:	4798      	blx	r3
 8000840:	4b0f      	ldr	r3, [pc, #60]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000842:	695b      	ldr	r3, [r3, #20]
 8000844:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000848:	2b00      	cmp	r3, #0
 800084a:	d008      	beq.n	800085e <EXTI15_10_IRQHandler+0x9a>
 800084c:	4b0c      	ldr	r3, [pc, #48]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 800084e:	695b      	ldr	r3, [r3, #20]
 8000850:	4a0b      	ldr	r2, [pc, #44]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000852:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000856:	6153      	str	r3, [r2, #20]
 8000858:	4b0a      	ldr	r3, [pc, #40]	; (8000884 <EXTI15_10_IRQHandler+0xc0>)
 800085a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800085c:	4798      	blx	r3
 800085e:	4b08      	ldr	r3, [pc, #32]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000860:	695b      	ldr	r3, [r3, #20]
 8000862:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000866:	2b00      	cmp	r3, #0
 8000868:	d008      	beq.n	800087c <EXTI15_10_IRQHandler+0xb8>
 800086a:	4b05      	ldr	r3, [pc, #20]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 800086c:	695b      	ldr	r3, [r3, #20]
 800086e:	4a04      	ldr	r2, [pc, #16]	; (8000880 <EXTI15_10_IRQHandler+0xbc>)
 8000870:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000874:	6153      	str	r3, [r2, #20]
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <EXTI15_10_IRQHandler+0xc0>)
 8000878:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800087a:	4798      	blx	r3
 800087c:	bf00      	nop
 800087e:	bd80      	pop	{r7, pc}
 8000880:	40010400 	.word	0x40010400
 8000884:	20000224 	.word	0x20000224

08000888 <Get_PIN_Positon>:
 8000888:	b480      	push	{r7}
 800088a:	b085      	sub	sp, #20
 800088c:	af00      	add	r7, sp, #0
 800088e:	4603      	mov	r3, r0
 8000890:	80fb      	strh	r3, [r7, #6]
 8000892:	88fb      	ldrh	r3, [r7, #6]
 8000894:	2b07      	cmp	r3, #7
 8000896:	d803      	bhi.n	80008a0 <Get_PIN_Positon+0x18>
 8000898:	88fb      	ldrh	r3, [r7, #6]
 800089a:	009b      	lsls	r3, r3, #2
 800089c:	b29b      	uxth	r3, r3
 800089e:	e006      	b.n	80008ae <Get_PIN_Positon+0x26>
 80008a0:	88fb      	ldrh	r3, [r7, #6]
 80008a2:	f503 537f 	add.w	r3, r3, #16320	; 0x3fc0
 80008a6:	3338      	adds	r3, #56	; 0x38
 80008a8:	b29b      	uxth	r3, r3
 80008aa:	009b      	lsls	r3, r3, #2
 80008ac:	b29b      	uxth	r3, r3
 80008ae:	81fb      	strh	r3, [r7, #14]
 80008b0:	89fb      	ldrh	r3, [r7, #14]
 80008b2:	4618      	mov	r0, r3
 80008b4:	3714      	adds	r7, #20
 80008b6:	46bd      	mov	sp, r7
 80008b8:	bc80      	pop	{r7}
 80008ba:	4770      	bx	lr

080008bc <MCAL_GPIO_init>:
 80008bc:	b590      	push	{r4, r7, lr}
 80008be:	b085      	sub	sp, #20
 80008c0:	af00      	add	r7, sp, #0
 80008c2:	6078      	str	r0, [r7, #4]
 80008c4:	6039      	str	r1, [r7, #0]
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	4a6a      	ldr	r2, [pc, #424]	; (8000a74 <MCAL_GPIO_init+0x1b8>)
 80008ca:	4293      	cmp	r3, r2
 80008cc:	d106      	bne.n	80008dc <MCAL_GPIO_init+0x20>
 80008ce:	4b6a      	ldr	r3, [pc, #424]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 80008d0:	699b      	ldr	r3, [r3, #24]
 80008d2:	4a69      	ldr	r2, [pc, #420]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 80008d4:	f043 0304 	orr.w	r3, r3, #4
 80008d8:	6193      	str	r3, [r2, #24]
 80008da:	e02a      	b.n	8000932 <MCAL_GPIO_init+0x76>
 80008dc:	687b      	ldr	r3, [r7, #4]
 80008de:	4a67      	ldr	r2, [pc, #412]	; (8000a7c <MCAL_GPIO_init+0x1c0>)
 80008e0:	4293      	cmp	r3, r2
 80008e2:	d106      	bne.n	80008f2 <MCAL_GPIO_init+0x36>
 80008e4:	4b64      	ldr	r3, [pc, #400]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 80008e6:	699b      	ldr	r3, [r3, #24]
 80008e8:	4a63      	ldr	r2, [pc, #396]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 80008ea:	f043 0308 	orr.w	r3, r3, #8
 80008ee:	6193      	str	r3, [r2, #24]
 80008f0:	e01f      	b.n	8000932 <MCAL_GPIO_init+0x76>
 80008f2:	687b      	ldr	r3, [r7, #4]
 80008f4:	4a62      	ldr	r2, [pc, #392]	; (8000a80 <MCAL_GPIO_init+0x1c4>)
 80008f6:	4293      	cmp	r3, r2
 80008f8:	d106      	bne.n	8000908 <MCAL_GPIO_init+0x4c>
 80008fa:	4b5f      	ldr	r3, [pc, #380]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 80008fc:	699b      	ldr	r3, [r3, #24]
 80008fe:	4a5e      	ldr	r2, [pc, #376]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 8000900:	f043 0310 	orr.w	r3, r3, #16
 8000904:	6193      	str	r3, [r2, #24]
 8000906:	e014      	b.n	8000932 <MCAL_GPIO_init+0x76>
 8000908:	687b      	ldr	r3, [r7, #4]
 800090a:	4a5e      	ldr	r2, [pc, #376]	; (8000a84 <MCAL_GPIO_init+0x1c8>)
 800090c:	4293      	cmp	r3, r2
 800090e:	d106      	bne.n	800091e <MCAL_GPIO_init+0x62>
 8000910:	4b59      	ldr	r3, [pc, #356]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 8000912:	699b      	ldr	r3, [r3, #24]
 8000914:	4a58      	ldr	r2, [pc, #352]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 8000916:	f043 0320 	orr.w	r3, r3, #32
 800091a:	6193      	str	r3, [r2, #24]
 800091c:	e009      	b.n	8000932 <MCAL_GPIO_init+0x76>
 800091e:	687b      	ldr	r3, [r7, #4]
 8000920:	4a59      	ldr	r2, [pc, #356]	; (8000a88 <MCAL_GPIO_init+0x1cc>)
 8000922:	4293      	cmp	r3, r2
 8000924:	d105      	bne.n	8000932 <MCAL_GPIO_init+0x76>
 8000926:	4b54      	ldr	r3, [pc, #336]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 8000928:	699b      	ldr	r3, [r3, #24]
 800092a:	4a53      	ldr	r2, [pc, #332]	; (8000a78 <MCAL_GPIO_init+0x1bc>)
 800092c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000930:	6193      	str	r3, [r2, #24]
 8000932:	683b      	ldr	r3, [r7, #0]
 8000934:	881b      	ldrh	r3, [r3, #0]
 8000936:	b29b      	uxth	r3, r3
 8000938:	2b07      	cmp	r3, #7
 800093a:	d801      	bhi.n	8000940 <MCAL_GPIO_init+0x84>
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	e001      	b.n	8000944 <MCAL_GPIO_init+0x88>
 8000940:	687b      	ldr	r3, [r7, #4]
 8000942:	3304      	adds	r3, #4
 8000944:	60fb      	str	r3, [r7, #12]
 8000946:	683b      	ldr	r3, [r7, #0]
 8000948:	881b      	ldrh	r3, [r3, #0]
 800094a:	b29b      	uxth	r3, r3
 800094c:	4618      	mov	r0, r3
 800094e:	f7ff ff9b 	bl	8000888 <Get_PIN_Positon>
 8000952:	4603      	mov	r3, r0
 8000954:	461a      	mov	r2, r3
 8000956:	230f      	movs	r3, #15
 8000958:	4093      	lsls	r3, r2
 800095a:	43da      	mvns	r2, r3
 800095c:	68fb      	ldr	r3, [r7, #12]
 800095e:	681b      	ldr	r3, [r3, #0]
 8000960:	401a      	ands	r2, r3
 8000962:	68fb      	ldr	r3, [r7, #12]
 8000964:	601a      	str	r2, [r3, #0]
 8000966:	683b      	ldr	r3, [r7, #0]
 8000968:	789b      	ldrb	r3, [r3, #2]
 800096a:	b2db      	uxtb	r3, r3
 800096c:	2b00      	cmp	r3, #0
 800096e:	d00e      	beq.n	800098e <MCAL_GPIO_init+0xd2>
 8000970:	683b      	ldr	r3, [r7, #0]
 8000972:	789b      	ldrb	r3, [r3, #2]
 8000974:	b2db      	uxtb	r3, r3
 8000976:	2b01      	cmp	r3, #1
 8000978:	d009      	beq.n	800098e <MCAL_GPIO_init+0xd2>
 800097a:	683b      	ldr	r3, [r7, #0]
 800097c:	789b      	ldrb	r3, [r3, #2]
 800097e:	b2db      	uxtb	r3, r3
 8000980:	2b02      	cmp	r3, #2
 8000982:	d004      	beq.n	800098e <MCAL_GPIO_init+0xd2>
 8000984:	683b      	ldr	r3, [r7, #0]
 8000986:	789b      	ldrb	r3, [r3, #2]
 8000988:	b2db      	uxtb	r3, r3
 800098a:	2b03      	cmp	r3, #3
 800098c:	d156      	bne.n	8000a3c <MCAL_GPIO_init+0x180>
 800098e:	683b      	ldr	r3, [r7, #0]
 8000990:	789b      	ldrb	r3, [r3, #2]
 8000992:	b2db      	uxtb	r3, r3
 8000994:	2b03      	cmp	r3, #3
 8000996:	d11c      	bne.n	80009d2 <MCAL_GPIO_init+0x116>
 8000998:	683b      	ldr	r3, [r7, #0]
 800099a:	881b      	ldrh	r3, [r3, #0]
 800099c:	b29b      	uxth	r3, r3
 800099e:	4618      	mov	r0, r3
 80009a0:	f7ff ff72 	bl	8000888 <Get_PIN_Positon>
 80009a4:	4603      	mov	r3, r0
 80009a6:	461a      	mov	r2, r3
 80009a8:	2308      	movs	r3, #8
 80009aa:	fa03 f202 	lsl.w	r2, r3, r2
 80009ae:	68fb      	ldr	r3, [r7, #12]
 80009b0:	681b      	ldr	r3, [r3, #0]
 80009b2:	431a      	orrs	r2, r3
 80009b4:	68fb      	ldr	r3, [r7, #12]
 80009b6:	601a      	str	r2, [r3, #0]
 80009b8:	683b      	ldr	r3, [r7, #0]
 80009ba:	881b      	ldrh	r3, [r3, #0]
 80009bc:	b29b      	uxth	r3, r3
 80009be:	461a      	mov	r2, r3
 80009c0:	2301      	movs	r3, #1
 80009c2:	4093      	lsls	r3, r2
 80009c4:	43da      	mvns	r2, r3
 80009c6:	687b      	ldr	r3, [r7, #4]
 80009c8:	68db      	ldr	r3, [r3, #12]
 80009ca:	401a      	ands	r2, r3
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	60da      	str	r2, [r3, #12]
 80009d0:	e04c      	b.n	8000a6c <MCAL_GPIO_init+0x1b0>
 80009d2:	683b      	ldr	r3, [r7, #0]
 80009d4:	789b      	ldrb	r3, [r3, #2]
 80009d6:	b2db      	uxtb	r3, r3
 80009d8:	2b02      	cmp	r3, #2
 80009da:	d11c      	bne.n	8000a16 <MCAL_GPIO_init+0x15a>
 80009dc:	683b      	ldr	r3, [r7, #0]
 80009de:	881b      	ldrh	r3, [r3, #0]
 80009e0:	b29b      	uxth	r3, r3
 80009e2:	4618      	mov	r0, r3
 80009e4:	f7ff ff50 	bl	8000888 <Get_PIN_Positon>
 80009e8:	4603      	mov	r3, r0
 80009ea:	461a      	mov	r2, r3
 80009ec:	2308      	movs	r3, #8
 80009ee:	fa03 f202 	lsl.w	r2, r3, r2
 80009f2:	68fb      	ldr	r3, [r7, #12]
 80009f4:	681b      	ldr	r3, [r3, #0]
 80009f6:	431a      	orrs	r2, r3
 80009f8:	68fb      	ldr	r3, [r7, #12]
 80009fa:	601a      	str	r2, [r3, #0]
 80009fc:	683b      	ldr	r3, [r7, #0]
 80009fe:	881b      	ldrh	r3, [r3, #0]
 8000a00:	b29b      	uxth	r3, r3
 8000a02:	461a      	mov	r2, r3
 8000a04:	2301      	movs	r3, #1
 8000a06:	fa03 f202 	lsl.w	r2, r3, r2
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	68db      	ldr	r3, [r3, #12]
 8000a0e:	431a      	orrs	r2, r3
 8000a10:	687b      	ldr	r3, [r7, #4]
 8000a12:	60da      	str	r2, [r3, #12]
 8000a14:	e02a      	b.n	8000a6c <MCAL_GPIO_init+0x1b0>
 8000a16:	683b      	ldr	r3, [r7, #0]
 8000a18:	789b      	ldrb	r3, [r3, #2]
 8000a1a:	b2db      	uxtb	r3, r3
 8000a1c:	009c      	lsls	r4, r3, #2
 8000a1e:	683b      	ldr	r3, [r7, #0]
 8000a20:	881b      	ldrh	r3, [r3, #0]
 8000a22:	b29b      	uxth	r3, r3
 8000a24:	4618      	mov	r0, r3
 8000a26:	f7ff ff2f 	bl	8000888 <Get_PIN_Positon>
 8000a2a:	4603      	mov	r3, r0
 8000a2c:	fa04 f203 	lsl.w	r2, r4, r3
 8000a30:	68fb      	ldr	r3, [r7, #12]
 8000a32:	681b      	ldr	r3, [r3, #0]
 8000a34:	431a      	orrs	r2, r3
 8000a36:	68fb      	ldr	r3, [r7, #12]
 8000a38:	601a      	str	r2, [r3, #0]
 8000a3a:	e017      	b.n	8000a6c <MCAL_GPIO_init+0x1b0>
 8000a3c:	683b      	ldr	r3, [r7, #0]
 8000a3e:	789b      	ldrb	r3, [r3, #2]
 8000a40:	b2db      	uxtb	r3, r3
 8000a42:	3b04      	subs	r3, #4
 8000a44:	009b      	lsls	r3, r3, #2
 8000a46:	683a      	ldr	r2, [r7, #0]
 8000a48:	78d2      	ldrb	r2, [r2, #3]
 8000a4a:	b2d2      	uxtb	r2, r2
 8000a4c:	ea43 0402 	orr.w	r4, r3, r2
 8000a50:	683b      	ldr	r3, [r7, #0]
 8000a52:	881b      	ldrh	r3, [r3, #0]
 8000a54:	b29b      	uxth	r3, r3
 8000a56:	4618      	mov	r0, r3
 8000a58:	f7ff ff16 	bl	8000888 <Get_PIN_Positon>
 8000a5c:	4603      	mov	r3, r0
 8000a5e:	fa04 f203 	lsl.w	r2, r4, r3
 8000a62:	68fb      	ldr	r3, [r7, #12]
 8000a64:	681b      	ldr	r3, [r3, #0]
 8000a66:	431a      	orrs	r2, r3
 8000a68:	68fb      	ldr	r3, [r7, #12]
 8000a6a:	601a      	str	r2, [r3, #0]
 8000a6c:	bf00      	nop
 8000a6e:	3714      	adds	r7, #20
 8000a70:	46bd      	mov	sp, r7
 8000a72:	bd90      	pop	{r4, r7, pc}
 8000a74:	40010800 	.word	0x40010800
 8000a78:	40021000 	.word	0x40021000
 8000a7c:	40010c00 	.word	0x40010c00
 8000a80:	40011000 	.word	0x40011000
 8000a84:	40011400 	.word	0x40011400
 8000a88:	40011800 	.word	0x40011800

08000a8c <MCAL_write_PIN>:
 8000a8c:	b480      	push	{r7}
 8000a8e:	b083      	sub	sp, #12
 8000a90:	af00      	add	r7, sp, #0
 8000a92:	6078      	str	r0, [r7, #4]
 8000a94:	460b      	mov	r3, r1
 8000a96:	807b      	strh	r3, [r7, #2]
 8000a98:	4613      	mov	r3, r2
 8000a9a:	707b      	strb	r3, [r7, #1]
 8000a9c:	787b      	ldrb	r3, [r7, #1]
 8000a9e:	b2db      	uxtb	r3, r3
 8000aa0:	2b01      	cmp	r3, #1
 8000aa2:	d10b      	bne.n	8000abc <MCAL_write_PIN+0x30>
 8000aa4:	887b      	ldrh	r3, [r7, #2]
 8000aa6:	b29b      	uxth	r3, r3
 8000aa8:	461a      	mov	r2, r3
 8000aaa:	2301      	movs	r3, #1
 8000aac:	fa03 f202 	lsl.w	r2, r3, r2
 8000ab0:	687b      	ldr	r3, [r7, #4]
 8000ab2:	68db      	ldr	r3, [r3, #12]
 8000ab4:	431a      	orrs	r2, r3
 8000ab6:	687b      	ldr	r3, [r7, #4]
 8000ab8:	60da      	str	r2, [r3, #12]
 8000aba:	e00a      	b.n	8000ad2 <MCAL_write_PIN+0x46>
 8000abc:	887b      	ldrh	r3, [r7, #2]
 8000abe:	b29b      	uxth	r3, r3
 8000ac0:	461a      	mov	r2, r3
 8000ac2:	2301      	movs	r3, #1
 8000ac4:	4093      	lsls	r3, r2
 8000ac6:	43da      	mvns	r2, r3
 8000ac8:	687b      	ldr	r3, [r7, #4]
 8000aca:	68db      	ldr	r3, [r3, #12]
 8000acc:	401a      	ands	r2, r3
 8000ace:	687b      	ldr	r3, [r7, #4]
 8000ad0:	60da      	str	r2, [r3, #12]
 8000ad2:	bf00      	nop
 8000ad4:	370c      	adds	r7, #12
 8000ad6:	46bd      	mov	sp, r7
 8000ad8:	bc80      	pop	{r7}
 8000ada:	4770      	bx	lr

08000adc <TIM2_IRQHandler>:
 8000adc:	b580      	push	{r7, lr}
 8000ade:	b082      	sub	sp, #8
 8000ae0:	af00      	add	r7, sp, #0
 8000ae2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ae6:	691b      	ldr	r3, [r3, #16]
 8000ae8:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8000aec:	b2db      	uxtb	r3, r3
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	d00b      	beq.n	8000b0a <TIM2_IRQHandler+0x2e>
 8000af2:	687a      	ldr	r2, [r7, #4]
 8000af4:	7813      	ldrb	r3, [r2, #0]
 8000af6:	f043 0301 	orr.w	r3, r3, #1
 8000afa:	7013      	strb	r3, [r2, #0]
 8000afc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000b00:	6913      	ldr	r3, [r2, #16]
 8000b02:	f36f 0300 	bfc	r3, #0, #1
 8000b06:	6113      	str	r3, [r2, #16]
 8000b08:	e04e      	b.n	8000ba8 <TIM2_IRQHandler+0xcc>
 8000b0a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000b0e:	691b      	ldr	r3, [r3, #16]
 8000b10:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000b14:	b2db      	uxtb	r3, r3
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d00b      	beq.n	8000b32 <TIM2_IRQHandler+0x56>
 8000b1a:	687a      	ldr	r2, [r7, #4]
 8000b1c:	7813      	ldrb	r3, [r2, #0]
 8000b1e:	f043 0302 	orr.w	r3, r3, #2
 8000b22:	7013      	strb	r3, [r2, #0]
 8000b24:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000b28:	6913      	ldr	r3, [r2, #16]
 8000b2a:	f36f 0341 	bfc	r3, #1, #1
 8000b2e:	6113      	str	r3, [r2, #16]
 8000b30:	e03a      	b.n	8000ba8 <TIM2_IRQHandler+0xcc>
 8000b32:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000b36:	691b      	ldr	r3, [r3, #16]
 8000b38:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8000b3c:	b2db      	uxtb	r3, r3
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d00b      	beq.n	8000b5a <TIM2_IRQHandler+0x7e>
 8000b42:	687a      	ldr	r2, [r7, #4]
 8000b44:	7813      	ldrb	r3, [r2, #0]
 8000b46:	f043 0304 	orr.w	r3, r3, #4
 8000b4a:	7013      	strb	r3, [r2, #0]
 8000b4c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000b50:	6913      	ldr	r3, [r2, #16]
 8000b52:	f36f 0382 	bfc	r3, #2, #1
 8000b56:	6113      	str	r3, [r2, #16]
 8000b58:	e026      	b.n	8000ba8 <TIM2_IRQHandler+0xcc>
 8000b5a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000b5e:	691b      	ldr	r3, [r3, #16]
 8000b60:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8000b64:	b2db      	uxtb	r3, r3
 8000b66:	2b00      	cmp	r3, #0
 8000b68:	d00b      	beq.n	8000b82 <TIM2_IRQHandler+0xa6>
 8000b6a:	687a      	ldr	r2, [r7, #4]
 8000b6c:	7813      	ldrb	r3, [r2, #0]
 8000b6e:	f043 0308 	orr.w	r3, r3, #8
 8000b72:	7013      	strb	r3, [r2, #0]
 8000b74:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000b78:	6913      	ldr	r3, [r2, #16]
 8000b7a:	f36f 03c3 	bfc	r3, #3, #1
 8000b7e:	6113      	str	r3, [r2, #16]
 8000b80:	e012      	b.n	8000ba8 <TIM2_IRQHandler+0xcc>
 8000b82:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000b86:	691b      	ldr	r3, [r3, #16]
 8000b88:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8000b8c:	b2db      	uxtb	r3, r3
 8000b8e:	2b00      	cmp	r3, #0
 8000b90:	d00a      	beq.n	8000ba8 <TIM2_IRQHandler+0xcc>
 8000b92:	687a      	ldr	r2, [r7, #4]
 8000b94:	7813      	ldrb	r3, [r2, #0]
 8000b96:	f043 0310 	orr.w	r3, r3, #16
 8000b9a:	7013      	strb	r3, [r2, #0]
 8000b9c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000ba0:	6913      	ldr	r3, [r2, #16]
 8000ba2:	f36f 1304 	bfc	r3, #4, #1
 8000ba6:	6113      	str	r3, [r2, #16]
 8000ba8:	4b03      	ldr	r3, [pc, #12]	; (8000bb8 <TIM2_IRQHandler+0xdc>)
 8000baa:	68db      	ldr	r3, [r3, #12]
 8000bac:	6878      	ldr	r0, [r7, #4]
 8000bae:	4798      	blx	r3
 8000bb0:	bf00      	nop
 8000bb2:	3708      	adds	r7, #8
 8000bb4:	46bd      	mov	sp, r7
 8000bb6:	bd80      	pop	{r7, pc}
 8000bb8:	20000260 	.word	0x20000260

08000bbc <TIM3_IRQHandler>:
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	b082      	sub	sp, #8
 8000bc0:	af00      	add	r7, sp, #0
 8000bc2:	4b30      	ldr	r3, [pc, #192]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000bc4:	691b      	ldr	r3, [r3, #16]
 8000bc6:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8000bca:	b2db      	uxtb	r3, r3
 8000bcc:	2b00      	cmp	r3, #0
 8000bce:	d00a      	beq.n	8000be6 <TIM3_IRQHandler+0x2a>
 8000bd0:	687a      	ldr	r2, [r7, #4]
 8000bd2:	7813      	ldrb	r3, [r2, #0]
 8000bd4:	f043 0301 	orr.w	r3, r3, #1
 8000bd8:	7013      	strb	r3, [r2, #0]
 8000bda:	4a2a      	ldr	r2, [pc, #168]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000bdc:	6913      	ldr	r3, [r2, #16]
 8000bde:	f36f 0300 	bfc	r3, #0, #1
 8000be2:	6113      	str	r3, [r2, #16]
 8000be4:	e046      	b.n	8000c74 <TIM3_IRQHandler+0xb8>
 8000be6:	4b27      	ldr	r3, [pc, #156]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000be8:	691b      	ldr	r3, [r3, #16]
 8000bea:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000bee:	b2db      	uxtb	r3, r3
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d00a      	beq.n	8000c0a <TIM3_IRQHandler+0x4e>
 8000bf4:	687a      	ldr	r2, [r7, #4]
 8000bf6:	7813      	ldrb	r3, [r2, #0]
 8000bf8:	f043 0302 	orr.w	r3, r3, #2
 8000bfc:	7013      	strb	r3, [r2, #0]
 8000bfe:	4a21      	ldr	r2, [pc, #132]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000c00:	6913      	ldr	r3, [r2, #16]
 8000c02:	f36f 0341 	bfc	r3, #1, #1
 8000c06:	6113      	str	r3, [r2, #16]
 8000c08:	e034      	b.n	8000c74 <TIM3_IRQHandler+0xb8>
 8000c0a:	4b1e      	ldr	r3, [pc, #120]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000c0c:	691b      	ldr	r3, [r3, #16]
 8000c0e:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8000c12:	b2db      	uxtb	r3, r3
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	d00a      	beq.n	8000c2e <TIM3_IRQHandler+0x72>
 8000c18:	687a      	ldr	r2, [r7, #4]
 8000c1a:	7813      	ldrb	r3, [r2, #0]
 8000c1c:	f043 0304 	orr.w	r3, r3, #4
 8000c20:	7013      	strb	r3, [r2, #0]
 8000c22:	4a18      	ldr	r2, [pc, #96]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000c24:	6913      	ldr	r3, [r2, #16]
 8000c26:	f36f 0382 	bfc	r3, #2, #1
 8000c2a:	6113      	str	r3, [r2, #16]
 8000c2c:	e022      	b.n	8000c74 <TIM3_IRQHandler+0xb8>
 8000c2e:	4b15      	ldr	r3, [pc, #84]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000c30:	691b      	ldr	r3, [r3, #16]
 8000c32:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8000c36:	b2db      	uxtb	r3, r3
 8000c38:	2b00      	cmp	r3, #0
 8000c3a:	d00a      	beq.n	8000c52 <TIM3_IRQHandler+0x96>
 8000c3c:	687a      	ldr	r2, [r7, #4]
 8000c3e:	7813      	ldrb	r3, [r2, #0]
 8000c40:	f043 0308 	orr.w	r3, r3, #8
 8000c44:	7013      	strb	r3, [r2, #0]
 8000c46:	4a0f      	ldr	r2, [pc, #60]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000c48:	6913      	ldr	r3, [r2, #16]
 8000c4a:	f36f 03c3 	bfc	r3, #3, #1
 8000c4e:	6113      	str	r3, [r2, #16]
 8000c50:	e010      	b.n	8000c74 <TIM3_IRQHandler+0xb8>
 8000c52:	4b0c      	ldr	r3, [pc, #48]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000c54:	691b      	ldr	r3, [r3, #16]
 8000c56:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8000c5a:	b2db      	uxtb	r3, r3
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d009      	beq.n	8000c74 <TIM3_IRQHandler+0xb8>
 8000c60:	687a      	ldr	r2, [r7, #4]
 8000c62:	7813      	ldrb	r3, [r2, #0]
 8000c64:	f043 0310 	orr.w	r3, r3, #16
 8000c68:	7013      	strb	r3, [r2, #0]
 8000c6a:	4a06      	ldr	r2, [pc, #24]	; (8000c84 <TIM3_IRQHandler+0xc8>)
 8000c6c:	6913      	ldr	r3, [r2, #16]
 8000c6e:	f36f 1304 	bfc	r3, #4, #1
 8000c72:	6113      	str	r3, [r2, #16]
 8000c74:	4b04      	ldr	r3, [pc, #16]	; (8000c88 <TIM3_IRQHandler+0xcc>)
 8000c76:	69db      	ldr	r3, [r3, #28]
 8000c78:	6878      	ldr	r0, [r7, #4]
 8000c7a:	4798      	blx	r3
 8000c7c:	bf00      	nop
 8000c7e:	3708      	adds	r7, #8
 8000c80:	46bd      	mov	sp, r7
 8000c82:	bd80      	pop	{r7, pc}
 8000c84:	40000400 	.word	0x40000400
 8000c88:	20000260 	.word	0x20000260

08000c8c <TIM4_IRQHandler>:
 8000c8c:	b580      	push	{r7, lr}
 8000c8e:	b082      	sub	sp, #8
 8000c90:	af00      	add	r7, sp, #0
 8000c92:	4b33      	ldr	r3, [pc, #204]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000c94:	691b      	ldr	r3, [r3, #16]
 8000c96:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8000c9a:	b2db      	uxtb	r3, r3
 8000c9c:	2b00      	cmp	r3, #0
 8000c9e:	d00a      	beq.n	8000cb6 <TIM4_IRQHandler+0x2a>
 8000ca0:	687a      	ldr	r2, [r7, #4]
 8000ca2:	7813      	ldrb	r3, [r2, #0]
 8000ca4:	f043 0301 	orr.w	r3, r3, #1
 8000ca8:	7013      	strb	r3, [r2, #0]
 8000caa:	4a2d      	ldr	r2, [pc, #180]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000cac:	6913      	ldr	r3, [r2, #16]
 8000cae:	f36f 0300 	bfc	r3, #0, #1
 8000cb2:	6113      	str	r3, [r2, #16]
 8000cb4:	e04b      	b.n	8000d4e <TIM4_IRQHandler+0xc2>
 8000cb6:	4b2a      	ldr	r3, [pc, #168]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000cb8:	691b      	ldr	r3, [r3, #16]
 8000cba:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000cbe:	b2db      	uxtb	r3, r3
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d00a      	beq.n	8000cda <TIM4_IRQHandler+0x4e>
 8000cc4:	687a      	ldr	r2, [r7, #4]
 8000cc6:	7813      	ldrb	r3, [r2, #0]
 8000cc8:	f043 0302 	orr.w	r3, r3, #2
 8000ccc:	7013      	strb	r3, [r2, #0]
 8000cce:	4a24      	ldr	r2, [pc, #144]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000cd0:	6913      	ldr	r3, [r2, #16]
 8000cd2:	f36f 0341 	bfc	r3, #1, #1
 8000cd6:	6113      	str	r3, [r2, #16]
 8000cd8:	e039      	b.n	8000d4e <TIM4_IRQHandler+0xc2>
 8000cda:	4b21      	ldr	r3, [pc, #132]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000cdc:	691b      	ldr	r3, [r3, #16]
 8000cde:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8000ce2:	b2db      	uxtb	r3, r3
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	d00f      	beq.n	8000d08 <TIM4_IRQHandler+0x7c>
 8000ce8:	687a      	ldr	r2, [r7, #4]
 8000cea:	7813      	ldrb	r3, [r2, #0]
 8000cec:	f043 0304 	orr.w	r3, r3, #4
 8000cf0:	7013      	strb	r3, [r2, #0]
 8000cf2:	4a1b      	ldr	r2, [pc, #108]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000cf4:	6913      	ldr	r3, [r2, #16]
 8000cf6:	f36f 0382 	bfc	r3, #2, #1
 8000cfa:	6113      	str	r3, [r2, #16]
 8000cfc:	687a      	ldr	r2, [r7, #4]
 8000cfe:	7813      	ldrb	r3, [r2, #0]
 8000d00:	f043 0301 	orr.w	r3, r3, #1
 8000d04:	7013      	strb	r3, [r2, #0]
 8000d06:	e022      	b.n	8000d4e <TIM4_IRQHandler+0xc2>
 8000d08:	4b15      	ldr	r3, [pc, #84]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000d0a:	691b      	ldr	r3, [r3, #16]
 8000d0c:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8000d10:	b2db      	uxtb	r3, r3
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	d00a      	beq.n	8000d2c <TIM4_IRQHandler+0xa0>
 8000d16:	687a      	ldr	r2, [r7, #4]
 8000d18:	7813      	ldrb	r3, [r2, #0]
 8000d1a:	f043 0308 	orr.w	r3, r3, #8
 8000d1e:	7013      	strb	r3, [r2, #0]
 8000d20:	4a0f      	ldr	r2, [pc, #60]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000d22:	6913      	ldr	r3, [r2, #16]
 8000d24:	f36f 03c3 	bfc	r3, #3, #1
 8000d28:	6113      	str	r3, [r2, #16]
 8000d2a:	e010      	b.n	8000d4e <TIM4_IRQHandler+0xc2>
 8000d2c:	4b0c      	ldr	r3, [pc, #48]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000d2e:	691b      	ldr	r3, [r3, #16]
 8000d30:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8000d34:	b2db      	uxtb	r3, r3
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d009      	beq.n	8000d4e <TIM4_IRQHandler+0xc2>
 8000d3a:	687a      	ldr	r2, [r7, #4]
 8000d3c:	7813      	ldrb	r3, [r2, #0]
 8000d3e:	f043 0310 	orr.w	r3, r3, #16
 8000d42:	7013      	strb	r3, [r2, #0]
 8000d44:	4a06      	ldr	r2, [pc, #24]	; (8000d60 <TIM4_IRQHandler+0xd4>)
 8000d46:	6913      	ldr	r3, [r2, #16]
 8000d48:	f36f 1304 	bfc	r3, #4, #1
 8000d4c:	6113      	str	r3, [r2, #16]
 8000d4e:	4b05      	ldr	r3, [pc, #20]	; (8000d64 <TIM4_IRQHandler+0xd8>)
 8000d50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000d52:	6878      	ldr	r0, [r7, #4]
 8000d54:	4798      	blx	r3
 8000d56:	bf00      	nop
 8000d58:	3708      	adds	r7, #8
 8000d5a:	46bd      	mov	sp, r7
 8000d5c:	bd80      	pop	{r7, pc}
 8000d5e:	bf00      	nop
 8000d60:	40000800 	.word	0x40000800
 8000d64:	20000260 	.word	0x20000260

08000d68 <MCAL_GET_SYS_CLCK>:
 8000d68:	b480      	push	{r7}
 8000d6a:	af00      	add	r7, sp, #0
 8000d6c:	4b0a      	ldr	r3, [pc, #40]	; (8000d98 <MCAL_GET_SYS_CLCK+0x30>)
 8000d6e:	685b      	ldr	r3, [r3, #4]
 8000d70:	089b      	lsrs	r3, r3, #2
 8000d72:	f003 0303 	and.w	r3, r3, #3
 8000d76:	2b01      	cmp	r3, #1
 8000d78:	d006      	beq.n	8000d88 <MCAL_GET_SYS_CLCK+0x20>
 8000d7a:	2b01      	cmp	r3, #1
 8000d7c:	d302      	bcc.n	8000d84 <MCAL_GET_SYS_CLCK+0x1c>
 8000d7e:	2b02      	cmp	r3, #2
 8000d80:	d004      	beq.n	8000d8c <MCAL_GET_SYS_CLCK+0x24>
 8000d82:	e005      	b.n	8000d90 <MCAL_GET_SYS_CLCK+0x28>
 8000d84:	4b05      	ldr	r3, [pc, #20]	; (8000d9c <MCAL_GET_SYS_CLCK+0x34>)
 8000d86:	e003      	b.n	8000d90 <MCAL_GET_SYS_CLCK+0x28>
 8000d88:	4b05      	ldr	r3, [pc, #20]	; (8000da0 <MCAL_GET_SYS_CLCK+0x38>)
 8000d8a:	e001      	b.n	8000d90 <MCAL_GET_SYS_CLCK+0x28>
 8000d8c:	4b05      	ldr	r3, [pc, #20]	; (8000da4 <MCAL_GET_SYS_CLCK+0x3c>)
 8000d8e:	e7ff      	b.n	8000d90 <MCAL_GET_SYS_CLCK+0x28>
 8000d90:	4618      	mov	r0, r3
 8000d92:	46bd      	mov	sp, r7
 8000d94:	bc80      	pop	{r7}
 8000d96:	4770      	bx	lr
 8000d98:	40021000 	.word	0x40021000
 8000d9c:	007a1200 	.word	0x007a1200
 8000da0:	00f42400 	.word	0x00f42400
 8000da4:	01ab3f00 	.word	0x01ab3f00

08000da8 <MCAL_GET_H_CLCK>:
 8000da8:	b580      	push	{r7, lr}
 8000daa:	af00      	add	r7, sp, #0
 8000dac:	f7ff ffdc 	bl	8000d68 <MCAL_GET_SYS_CLCK>
 8000db0:	4601      	mov	r1, r0
 8000db2:	4b05      	ldr	r3, [pc, #20]	; (8000dc8 <MCAL_GET_H_CLCK+0x20>)
 8000db4:	685b      	ldr	r3, [r3, #4]
 8000db6:	091b      	lsrs	r3, r3, #4
 8000db8:	f003 030f 	and.w	r3, r3, #15
 8000dbc:	4a03      	ldr	r2, [pc, #12]	; (8000dcc <MCAL_GET_H_CLCK+0x24>)
 8000dbe:	5cd3      	ldrb	r3, [r2, r3]
 8000dc0:	fa21 f303 	lsr.w	r3, r1, r3
 8000dc4:	4618      	mov	r0, r3
 8000dc6:	bd80      	pop	{r7, pc}
 8000dc8:	40021000 	.word	0x40021000
 8000dcc:	20000008 	.word	0x20000008

08000dd0 <MCAL_GET_PCLCK1>:
 8000dd0:	b580      	push	{r7, lr}
 8000dd2:	af00      	add	r7, sp, #0
 8000dd4:	f7ff ffe8 	bl	8000da8 <MCAL_GET_H_CLCK>
 8000dd8:	4601      	mov	r1, r0
 8000dda:	4b05      	ldr	r3, [pc, #20]	; (8000df0 <MCAL_GET_PCLCK1+0x20>)
 8000ddc:	685b      	ldr	r3, [r3, #4]
 8000dde:	0a1b      	lsrs	r3, r3, #8
 8000de0:	f003 0307 	and.w	r3, r3, #7
 8000de4:	4a03      	ldr	r2, [pc, #12]	; (8000df4 <MCAL_GET_PCLCK1+0x24>)
 8000de6:	5cd3      	ldrb	r3, [r2, r3]
 8000de8:	fa21 f303 	lsr.w	r3, r1, r3
 8000dec:	4618      	mov	r0, r3
 8000dee:	bd80      	pop	{r7, pc}
 8000df0:	40021000 	.word	0x40021000
 8000df4:	20000000 	.word	0x20000000

08000df8 <MCAL_GET_PCLCK2>:
 8000df8:	b580      	push	{r7, lr}
 8000dfa:	af00      	add	r7, sp, #0
 8000dfc:	f7ff ffd4 	bl	8000da8 <MCAL_GET_H_CLCK>
 8000e00:	4601      	mov	r1, r0
 8000e02:	4b05      	ldr	r3, [pc, #20]	; (8000e18 <MCAL_GET_PCLCK2+0x20>)
 8000e04:	685b      	ldr	r3, [r3, #4]
 8000e06:	0adb      	lsrs	r3, r3, #11
 8000e08:	f003 0307 	and.w	r3, r3, #7
 8000e0c:	4a03      	ldr	r2, [pc, #12]	; (8000e1c <MCAL_GET_PCLCK2+0x24>)
 8000e0e:	5cd3      	ldrb	r3, [r2, r3]
 8000e10:	fa21 f303 	lsr.w	r3, r1, r3
 8000e14:	4618      	mov	r0, r3
 8000e16:	bd80      	pop	{r7, pc}
 8000e18:	40021000 	.word	0x40021000
 8000e1c:	20000000 	.word	0x20000000

08000e20 <SPI1_IRQHandler>:
 8000e20:	b580      	push	{r7, lr}
 8000e22:	b082      	sub	sp, #8
 8000e24:	af00      	add	r7, sp, #0
 8000e26:	1d3b      	adds	r3, r7, #4
 8000e28:	4905      	ldr	r1, [pc, #20]	; (8000e40 <SPI1_IRQHandler+0x20>)
 8000e2a:	4618      	mov	r0, r3
 8000e2c:	f000 f80c 	bl	8000e48 <get_flag_source>
 8000e30:	4b04      	ldr	r3, [pc, #16]	; (8000e44 <SPI1_IRQHandler+0x24>)
 8000e32:	68db      	ldr	r3, [r3, #12]
 8000e34:	7938      	ldrb	r0, [r7, #4]
 8000e36:	4798      	blx	r3
 8000e38:	bf00      	nop
 8000e3a:	3708      	adds	r7, #8
 8000e3c:	46bd      	mov	sp, r7
 8000e3e:	bd80      	pop	{r7, pc}
 8000e40:	40013000 	.word	0x40013000
 8000e44:	20000200 	.word	0x20000200

08000e48 <get_flag_source>:
 8000e48:	b480      	push	{r7}
 8000e4a:	b083      	sub	sp, #12
 8000e4c:	af00      	add	r7, sp, #0
 8000e4e:	6078      	str	r0, [r7, #4]
 8000e50:	6039      	str	r1, [r7, #0]
 8000e52:	683b      	ldr	r3, [r7, #0]
 8000e54:	689b      	ldr	r3, [r3, #8]
 8000e56:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8000e5a:	b2db      	uxtb	r3, r3
 8000e5c:	2b00      	cmp	r3, #0
 8000e5e:	d00f      	beq.n	8000e80 <get_flag_source+0x38>
 8000e60:	687a      	ldr	r2, [r7, #4]
 8000e62:	7813      	ldrb	r3, [r2, #0]
 8000e64:	f36f 0300 	bfc	r3, #0, #1
 8000e68:	7013      	strb	r3, [r2, #0]
 8000e6a:	687a      	ldr	r2, [r7, #4]
 8000e6c:	7813      	ldrb	r3, [r2, #0]
 8000e6e:	f043 0302 	orr.w	r3, r3, #2
 8000e72:	7013      	strb	r3, [r2, #0]
 8000e74:	683a      	ldr	r2, [r7, #0]
 8000e76:	7913      	ldrb	r3, [r2, #4]
 8000e78:	f36f 1386 	bfc	r3, #6, #1
 8000e7c:	7113      	strb	r3, [r2, #4]
 8000e7e:	e015      	b.n	8000eac <get_flag_source+0x64>
 8000e80:	683b      	ldr	r3, [r7, #0]
 8000e82:	689b      	ldr	r3, [r3, #8]
 8000e84:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000e88:	b2db      	uxtb	r3, r3
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	d00e      	beq.n	8000eac <get_flag_source+0x64>
 8000e8e:	687a      	ldr	r2, [r7, #4]
 8000e90:	7813      	ldrb	r3, [r2, #0]
 8000e92:	f043 0301 	orr.w	r3, r3, #1
 8000e96:	7013      	strb	r3, [r2, #0]
 8000e98:	687a      	ldr	r2, [r7, #4]
 8000e9a:	7813      	ldrb	r3, [r2, #0]
 8000e9c:	f36f 0341 	bfc	r3, #1, #1
 8000ea0:	7013      	strb	r3, [r2, #0]
 8000ea2:	683a      	ldr	r2, [r7, #0]
 8000ea4:	7913      	ldrb	r3, [r2, #4]
 8000ea6:	f36f 13c7 	bfc	r3, #7, #1
 8000eaa:	7113      	strb	r3, [r2, #4]
 8000eac:	bf00      	nop
 8000eae:	370c      	adds	r7, #12
 8000eb0:	46bd      	mov	sp, r7
 8000eb2:	bc80      	pop	{r7}
 8000eb4:	4770      	bx	lr
	...

08000eb8 <TIM1_UP_IRQHandler>:
 8000eb8:	b580      	push	{r7, lr}
 8000eba:	af00      	add	r7, sp, #0
 8000ebc:	4b05      	ldr	r3, [pc, #20]	; (8000ed4 <TIM1_UP_IRQHandler+0x1c>)
 8000ebe:	68db      	ldr	r3, [r3, #12]
 8000ec0:	4798      	blx	r3
 8000ec2:	4b05      	ldr	r3, [pc, #20]	; (8000ed8 <TIM1_UP_IRQHandler+0x20>)
 8000ec4:	681a      	ldr	r2, [r3, #0]
 8000ec6:	6913      	ldr	r3, [r2, #16]
 8000ec8:	f36f 0300 	bfc	r3, #0, #1
 8000ecc:	6113      	str	r3, [r2, #16]
 8000ece:	bf00      	nop
 8000ed0:	bd80      	pop	{r7, pc}
 8000ed2:	bf00      	nop
 8000ed4:	2000029c 	.word	0x2000029c
 8000ed8:	200002ac 	.word	0x200002ac

08000edc <TIM1_CC_IRQHandler>:
 8000edc:	b580      	push	{r7, lr}
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	4b05      	ldr	r3, [pc, #20]	; (8000ef8 <TIM1_CC_IRQHandler+0x1c>)
 8000ee2:	68db      	ldr	r3, [r3, #12]
 8000ee4:	4798      	blx	r3
 8000ee6:	4b05      	ldr	r3, [pc, #20]	; (8000efc <TIM1_CC_IRQHandler+0x20>)
 8000ee8:	681a      	ldr	r2, [r3, #0]
 8000eea:	6913      	ldr	r3, [r2, #16]
 8000eec:	f36f 0341 	bfc	r3, #1, #1
 8000ef0:	6113      	str	r3, [r2, #16]
 8000ef2:	bf00      	nop
 8000ef4:	bd80      	pop	{r7, pc}
 8000ef6:	bf00      	nop
 8000ef8:	2000029c 	.word	0x2000029c
 8000efc:	200002ac 	.word	0x200002ac

08000f00 <TIM1_BRK_IRQHandler>:
 8000f00:	b580      	push	{r7, lr}
 8000f02:	af00      	add	r7, sp, #0
 8000f04:	4b05      	ldr	r3, [pc, #20]	; (8000f1c <TIM1_BRK_IRQHandler+0x1c>)
 8000f06:	68db      	ldr	r3, [r3, #12]
 8000f08:	4798      	blx	r3
 8000f0a:	4b05      	ldr	r3, [pc, #20]	; (8000f20 <TIM1_BRK_IRQHandler+0x20>)
 8000f0c:	681a      	ldr	r2, [r3, #0]
 8000f0e:	6913      	ldr	r3, [r2, #16]
 8000f10:	f36f 0300 	bfc	r3, #0, #1
 8000f14:	6113      	str	r3, [r2, #16]
 8000f16:	bf00      	nop
 8000f18:	bd80      	pop	{r7, pc}
 8000f1a:	bf00      	nop
 8000f1c:	2000029c 	.word	0x2000029c
 8000f20:	200002ac 	.word	0x200002ac

08000f24 <TIM1_TRG_COM_IRQHandler>:
 8000f24:	b580      	push	{r7, lr}
 8000f26:	af00      	add	r7, sp, #0
 8000f28:	4b05      	ldr	r3, [pc, #20]	; (8000f40 <TIM1_TRG_COM_IRQHandler+0x1c>)
 8000f2a:	68db      	ldr	r3, [r3, #12]
 8000f2c:	4798      	blx	r3
 8000f2e:	4b05      	ldr	r3, [pc, #20]	; (8000f44 <TIM1_TRG_COM_IRQHandler+0x20>)
 8000f30:	681a      	ldr	r2, [r3, #0]
 8000f32:	6913      	ldr	r3, [r2, #16]
 8000f34:	f36f 0300 	bfc	r3, #0, #1
 8000f38:	6113      	str	r3, [r2, #16]
 8000f3a:	bf00      	nop
 8000f3c:	bd80      	pop	{r7, pc}
 8000f3e:	bf00      	nop
 8000f40:	2000029c 	.word	0x2000029c
 8000f44:	200002ac 	.word	0x200002ac

08000f48 <MCAL_USART_init>:
 8000f48:	b5b0      	push	{r4, r5, r7, lr}
 8000f4a:	b082      	sub	sp, #8
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
 8000f50:	6039      	str	r1, [r7, #0]
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	4aa9      	ldr	r2, [pc, #676]	; (80011fc <MCAL_USART_init+0x2b4>)
 8000f56:	4293      	cmp	r3, r2
 8000f58:	d10c      	bne.n	8000f74 <MCAL_USART_init+0x2c>
 8000f5a:	4aa9      	ldr	r2, [pc, #676]	; (8001200 <MCAL_USART_init+0x2b8>)
 8000f5c:	683b      	ldr	r3, [r7, #0]
 8000f5e:	4614      	mov	r4, r2
 8000f60:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000f62:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8000f66:	4ba7      	ldr	r3, [pc, #668]	; (8001204 <MCAL_USART_init+0x2bc>)
 8000f68:	699b      	ldr	r3, [r3, #24]
 8000f6a:	4aa6      	ldr	r2, [pc, #664]	; (8001204 <MCAL_USART_init+0x2bc>)
 8000f6c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000f70:	6193      	str	r3, [r2, #24]
 8000f72:	e024      	b.n	8000fbe <MCAL_USART_init+0x76>
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	4aa4      	ldr	r2, [pc, #656]	; (8001208 <MCAL_USART_init+0x2c0>)
 8000f78:	4293      	cmp	r3, r2
 8000f7a:	d10e      	bne.n	8000f9a <MCAL_USART_init+0x52>
 8000f7c:	4ba0      	ldr	r3, [pc, #640]	; (8001200 <MCAL_USART_init+0x2b8>)
 8000f7e:	683a      	ldr	r2, [r7, #0]
 8000f80:	f103 0410 	add.w	r4, r3, #16
 8000f84:	4613      	mov	r3, r2
 8000f86:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000f88:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8000f8c:	4b9d      	ldr	r3, [pc, #628]	; (8001204 <MCAL_USART_init+0x2bc>)
 8000f8e:	69db      	ldr	r3, [r3, #28]
 8000f90:	4a9c      	ldr	r2, [pc, #624]	; (8001204 <MCAL_USART_init+0x2bc>)
 8000f92:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000f96:	61d3      	str	r3, [r2, #28]
 8000f98:	e011      	b.n	8000fbe <MCAL_USART_init+0x76>
 8000f9a:	687b      	ldr	r3, [r7, #4]
 8000f9c:	4a9b      	ldr	r2, [pc, #620]	; (800120c <MCAL_USART_init+0x2c4>)
 8000f9e:	4293      	cmp	r3, r2
 8000fa0:	d10d      	bne.n	8000fbe <MCAL_USART_init+0x76>
 8000fa2:	4b97      	ldr	r3, [pc, #604]	; (8001200 <MCAL_USART_init+0x2b8>)
 8000fa4:	683a      	ldr	r2, [r7, #0]
 8000fa6:	f103 0420 	add.w	r4, r3, #32
 8000faa:	4613      	mov	r3, r2
 8000fac:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000fae:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8000fb2:	4b94      	ldr	r3, [pc, #592]	; (8001204 <MCAL_USART_init+0x2bc>)
 8000fb4:	69db      	ldr	r3, [r3, #28]
 8000fb6:	4a93      	ldr	r2, [pc, #588]	; (8001204 <MCAL_USART_init+0x2bc>)
 8000fb8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000fbc:	61d3      	str	r3, [r2, #28]
 8000fbe:	687b      	ldr	r3, [r7, #4]
 8000fc0:	68db      	ldr	r3, [r3, #12]
 8000fc2:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	60da      	str	r2, [r3, #12]
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	68db      	ldr	r3, [r3, #12]
 8000fce:	683a      	ldr	r2, [r7, #0]
 8000fd0:	7912      	ldrb	r2, [r2, #4]
 8000fd2:	0312      	lsls	r2, r2, #12
 8000fd4:	431a      	orrs	r2, r3
 8000fd6:	687b      	ldr	r3, [r7, #4]
 8000fd8:	60da      	str	r2, [r3, #12]
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	691b      	ldr	r3, [r3, #16]
 8000fde:	683a      	ldr	r2, [r7, #0]
 8000fe0:	79d2      	ldrb	r2, [r2, #7]
 8000fe2:	0312      	lsls	r2, r2, #12
 8000fe4:	431a      	orrs	r2, r3
 8000fe6:	687b      	ldr	r3, [r7, #4]
 8000fe8:	611a      	str	r2, [r3, #16]
 8000fea:	683b      	ldr	r3, [r7, #0]
 8000fec:	7a5b      	ldrb	r3, [r3, #9]
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	d10b      	bne.n	800100a <MCAL_USART_init+0xc2>
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	68db      	ldr	r3, [r3, #12]
 8000ff6:	f043 0208 	orr.w	r2, r3, #8
 8000ffa:	687b      	ldr	r3, [r7, #4]
 8000ffc:	60da      	str	r2, [r3, #12]
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	68db      	ldr	r3, [r3, #12]
 8001002:	f043 0204 	orr.w	r2, r3, #4
 8001006:	687b      	ldr	r3, [r7, #4]
 8001008:	60da      	str	r2, [r3, #12]
 800100a:	683b      	ldr	r3, [r7, #0]
 800100c:	7a1b      	ldrb	r3, [r3, #8]
 800100e:	2b03      	cmp	r3, #3
 8001010:	d826      	bhi.n	8001060 <MCAL_USART_init+0x118>
 8001012:	a201      	add	r2, pc, #4	; (adr r2, 8001018 <MCAL_USART_init+0xd0>)
 8001014:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001018:	08001029 	.word	0x08001029
 800101c:	08001037 	.word	0x08001037
 8001020:	08001045 	.word	0x08001045
 8001024:	08001053 	.word	0x08001053
 8001028:	687b      	ldr	r3, [r7, #4]
 800102a:	695b      	ldr	r3, [r3, #20]
 800102c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8001030:	687b      	ldr	r3, [r7, #4]
 8001032:	615a      	str	r2, [r3, #20]
 8001034:	e014      	b.n	8001060 <MCAL_USART_init+0x118>
 8001036:	687b      	ldr	r3, [r7, #4]
 8001038:	695b      	ldr	r3, [r3, #20]
 800103a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	615a      	str	r2, [r3, #20]
 8001042:	e00d      	b.n	8001060 <MCAL_USART_init+0x118>
 8001044:	687b      	ldr	r3, [r7, #4]
 8001046:	695b      	ldr	r3, [r3, #20]
 8001048:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	615a      	str	r2, [r3, #20]
 8001050:	e006      	b.n	8001060 <MCAL_USART_init+0x118>
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	695b      	ldr	r3, [r3, #20]
 8001056:	f443 7240 	orr.w	r2, r3, #768	; 0x300
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	615a      	str	r2, [r3, #20]
 800105e:	bf00      	nop
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	68db      	ldr	r3, [r3, #12]
 8001064:	683a      	ldr	r2, [r7, #0]
 8001066:	7952      	ldrb	r2, [r2, #5]
 8001068:	0252      	lsls	r2, r2, #9
 800106a:	431a      	orrs	r2, r3
 800106c:	687b      	ldr	r3, [r7, #4]
 800106e:	60da      	str	r2, [r3, #12]
 8001070:	683b      	ldr	r3, [r7, #0]
 8001072:	799b      	ldrb	r3, [r3, #6]
 8001074:	2b01      	cmp	r3, #1
 8001076:	d125      	bne.n	80010c4 <MCAL_USART_init+0x17c>
 8001078:	687b      	ldr	r3, [r7, #4]
 800107a:	4a60      	ldr	r2, [pc, #384]	; (80011fc <MCAL_USART_init+0x2b4>)
 800107c:	4293      	cmp	r3, r2
 800107e:	d106      	bne.n	800108e <MCAL_USART_init+0x146>
 8001080:	4b63      	ldr	r3, [pc, #396]	; (8001210 <MCAL_USART_init+0x2c8>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	4a62      	ldr	r2, [pc, #392]	; (8001210 <MCAL_USART_init+0x2c8>)
 8001086:	f043 0320 	orr.w	r3, r3, #32
 800108a:	6013      	str	r3, [r2, #0]
 800108c:	e014      	b.n	80010b8 <MCAL_USART_init+0x170>
 800108e:	687b      	ldr	r3, [r7, #4]
 8001090:	4a5d      	ldr	r2, [pc, #372]	; (8001208 <MCAL_USART_init+0x2c0>)
 8001092:	4293      	cmp	r3, r2
 8001094:	d106      	bne.n	80010a4 <MCAL_USART_init+0x15c>
 8001096:	4b5e      	ldr	r3, [pc, #376]	; (8001210 <MCAL_USART_init+0x2c8>)
 8001098:	681b      	ldr	r3, [r3, #0]
 800109a:	4a5d      	ldr	r2, [pc, #372]	; (8001210 <MCAL_USART_init+0x2c8>)
 800109c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010a0:	6013      	str	r3, [r2, #0]
 80010a2:	e009      	b.n	80010b8 <MCAL_USART_init+0x170>
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	4a59      	ldr	r2, [pc, #356]	; (800120c <MCAL_USART_init+0x2c4>)
 80010a8:	4293      	cmp	r3, r2
 80010aa:	d105      	bne.n	80010b8 <MCAL_USART_init+0x170>
 80010ac:	4b58      	ldr	r3, [pc, #352]	; (8001210 <MCAL_USART_init+0x2c8>)
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	4a57      	ldr	r2, [pc, #348]	; (8001210 <MCAL_USART_init+0x2c8>)
 80010b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80010b6:	6013      	str	r3, [r2, #0]
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	68db      	ldr	r3, [r3, #12]
 80010bc:	f043 0220 	orr.w	r2, r3, #32
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	60da      	str	r2, [r3, #12]
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	4a4d      	ldr	r2, [pc, #308]	; (80011fc <MCAL_USART_init+0x2b4>)
 80010c8:	4293      	cmp	r3, r2
 80010ca:	d12d      	bne.n	8001128 <MCAL_USART_init+0x1e0>
 80010cc:	f7ff fe94 	bl	8000df8 <MCAL_GET_PCLCK2>
 80010d0:	4602      	mov	r2, r0
 80010d2:	683b      	ldr	r3, [r7, #0]
 80010d4:	681b      	ldr	r3, [r3, #0]
 80010d6:	011b      	lsls	r3, r3, #4
 80010d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80010dc:	011c      	lsls	r4, r3, #4
 80010de:	f7ff fe8b 	bl	8000df8 <MCAL_GET_PCLCK2>
 80010e2:	4602      	mov	r2, r0
 80010e4:	4613      	mov	r3, r2
 80010e6:	009b      	lsls	r3, r3, #2
 80010e8:	4413      	add	r3, r2
 80010ea:	009a      	lsls	r2, r3, #2
 80010ec:	441a      	add	r2, r3
 80010ee:	683b      	ldr	r3, [r7, #0]
 80010f0:	681b      	ldr	r3, [r3, #0]
 80010f2:	009b      	lsls	r3, r3, #2
 80010f4:	fbb2 f5f3 	udiv	r5, r2, r3
 80010f8:	f7ff fe7e 	bl	8000df8 <MCAL_GET_PCLCK2>
 80010fc:	4602      	mov	r2, r0
 80010fe:	683b      	ldr	r3, [r7, #0]
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	011b      	lsls	r3, r3, #4
 8001104:	fbb2 f3f3 	udiv	r3, r2, r3
 8001108:	2264      	movs	r2, #100	; 0x64
 800110a:	fb02 f303 	mul.w	r3, r2, r3
 800110e:	1aeb      	subs	r3, r5, r3
 8001110:	011b      	lsls	r3, r3, #4
 8001112:	4a40      	ldr	r2, [pc, #256]	; (8001214 <MCAL_USART_init+0x2cc>)
 8001114:	fba2 2303 	umull	r2, r3, r2, r3
 8001118:	095b      	lsrs	r3, r3, #5
 800111a:	f003 030f 	and.w	r3, r3, #15
 800111e:	ea44 0203 	orr.w	r2, r4, r3
 8001122:	687b      	ldr	r3, [r7, #4]
 8001124:	609a      	str	r2, [r3, #8]
 8001126:	e062      	b.n	80011ee <MCAL_USART_init+0x2a6>
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	4a37      	ldr	r2, [pc, #220]	; (8001208 <MCAL_USART_init+0x2c0>)
 800112c:	4293      	cmp	r3, r2
 800112e:	d12d      	bne.n	800118c <MCAL_USART_init+0x244>
 8001130:	f7ff fe4e 	bl	8000dd0 <MCAL_GET_PCLCK1>
 8001134:	4602      	mov	r2, r0
 8001136:	683b      	ldr	r3, [r7, #0]
 8001138:	681b      	ldr	r3, [r3, #0]
 800113a:	011b      	lsls	r3, r3, #4
 800113c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001140:	011c      	lsls	r4, r3, #4
 8001142:	f7ff fe45 	bl	8000dd0 <MCAL_GET_PCLCK1>
 8001146:	4602      	mov	r2, r0
 8001148:	4613      	mov	r3, r2
 800114a:	009b      	lsls	r3, r3, #2
 800114c:	4413      	add	r3, r2
 800114e:	009a      	lsls	r2, r3, #2
 8001150:	441a      	add	r2, r3
 8001152:	683b      	ldr	r3, [r7, #0]
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	009b      	lsls	r3, r3, #2
 8001158:	fbb2 f5f3 	udiv	r5, r2, r3
 800115c:	f7ff fe38 	bl	8000dd0 <MCAL_GET_PCLCK1>
 8001160:	4602      	mov	r2, r0
 8001162:	683b      	ldr	r3, [r7, #0]
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	011b      	lsls	r3, r3, #4
 8001168:	fbb2 f3f3 	udiv	r3, r2, r3
 800116c:	2264      	movs	r2, #100	; 0x64
 800116e:	fb02 f303 	mul.w	r3, r2, r3
 8001172:	1aeb      	subs	r3, r5, r3
 8001174:	011b      	lsls	r3, r3, #4
 8001176:	4a27      	ldr	r2, [pc, #156]	; (8001214 <MCAL_USART_init+0x2cc>)
 8001178:	fba2 2303 	umull	r2, r3, r2, r3
 800117c:	095b      	lsrs	r3, r3, #5
 800117e:	f003 030f 	and.w	r3, r3, #15
 8001182:	ea44 0203 	orr.w	r2, r4, r3
 8001186:	687b      	ldr	r3, [r7, #4]
 8001188:	609a      	str	r2, [r3, #8]
 800118a:	e030      	b.n	80011ee <MCAL_USART_init+0x2a6>
 800118c:	687b      	ldr	r3, [r7, #4]
 800118e:	4a1f      	ldr	r2, [pc, #124]	; (800120c <MCAL_USART_init+0x2c4>)
 8001190:	4293      	cmp	r3, r2
 8001192:	d12c      	bne.n	80011ee <MCAL_USART_init+0x2a6>
 8001194:	f7ff fe1c 	bl	8000dd0 <MCAL_GET_PCLCK1>
 8001198:	4602      	mov	r2, r0
 800119a:	683b      	ldr	r3, [r7, #0]
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	011b      	lsls	r3, r3, #4
 80011a0:	fbb2 f3f3 	udiv	r3, r2, r3
 80011a4:	011c      	lsls	r4, r3, #4
 80011a6:	f7ff fe13 	bl	8000dd0 <MCAL_GET_PCLCK1>
 80011aa:	4602      	mov	r2, r0
 80011ac:	4613      	mov	r3, r2
 80011ae:	009b      	lsls	r3, r3, #2
 80011b0:	4413      	add	r3, r2
 80011b2:	009a      	lsls	r2, r3, #2
 80011b4:	441a      	add	r2, r3
 80011b6:	683b      	ldr	r3, [r7, #0]
 80011b8:	681b      	ldr	r3, [r3, #0]
 80011ba:	009b      	lsls	r3, r3, #2
 80011bc:	fbb2 f5f3 	udiv	r5, r2, r3
 80011c0:	f7ff fe06 	bl	8000dd0 <MCAL_GET_PCLCK1>
 80011c4:	4602      	mov	r2, r0
 80011c6:	683b      	ldr	r3, [r7, #0]
 80011c8:	681b      	ldr	r3, [r3, #0]
 80011ca:	011b      	lsls	r3, r3, #4
 80011cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80011d0:	2264      	movs	r2, #100	; 0x64
 80011d2:	fb02 f303 	mul.w	r3, r2, r3
 80011d6:	1aeb      	subs	r3, r5, r3
 80011d8:	011b      	lsls	r3, r3, #4
 80011da:	4a0e      	ldr	r2, [pc, #56]	; (8001214 <MCAL_USART_init+0x2cc>)
 80011dc:	fba2 2303 	umull	r2, r3, r2, r3
 80011e0:	095b      	lsrs	r3, r3, #5
 80011e2:	f003 030f 	and.w	r3, r3, #15
 80011e6:	ea44 0203 	orr.w	r2, r4, r3
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	609a      	str	r2, [r3, #8]
 80011ee:	6878      	ldr	r0, [r7, #4]
 80011f0:	f000 f85c 	bl	80012ac <SET_GPIO>
 80011f4:	bf00      	nop
 80011f6:	3708      	adds	r7, #8
 80011f8:	46bd      	mov	sp, r7
 80011fa:	bdb0      	pop	{r4, r5, r7, pc}
 80011fc:	40013800 	.word	0x40013800
 8001200:	200002b0 	.word	0x200002b0
 8001204:	40021000 	.word	0x40021000
 8001208:	40004400 	.word	0x40004400
 800120c:	40004800 	.word	0x40004800
 8001210:	e000e104 	.word	0xe000e104
 8001214:	51eb851f 	.word	0x51eb851f

08001218 <MCAL_USART_ReciveData>:
 8001218:	b480      	push	{r7}
 800121a:	b085      	sub	sp, #20
 800121c:	af00      	add	r7, sp, #0
 800121e:	6078      	str	r0, [r7, #4]
 8001220:	2300      	movs	r3, #0
 8001222:	60fb      	str	r3, [r7, #12]
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	4a1b      	ldr	r2, [pc, #108]	; (8001294 <MCAL_USART_ReciveData+0x7c>)
 8001228:	4293      	cmp	r3, r2
 800122a:	d102      	bne.n	8001232 <MCAL_USART_ReciveData+0x1a>
 800122c:	4b1a      	ldr	r3, [pc, #104]	; (8001298 <MCAL_USART_ReciveData+0x80>)
 800122e:	60fb      	str	r3, [r7, #12]
 8001230:	e00c      	b.n	800124c <MCAL_USART_ReciveData+0x34>
 8001232:	687b      	ldr	r3, [r7, #4]
 8001234:	4a19      	ldr	r2, [pc, #100]	; (800129c <MCAL_USART_ReciveData+0x84>)
 8001236:	4293      	cmp	r3, r2
 8001238:	d102      	bne.n	8001240 <MCAL_USART_ReciveData+0x28>
 800123a:	4b19      	ldr	r3, [pc, #100]	; (80012a0 <MCAL_USART_ReciveData+0x88>)
 800123c:	60fb      	str	r3, [r7, #12]
 800123e:	e005      	b.n	800124c <MCAL_USART_ReciveData+0x34>
 8001240:	687b      	ldr	r3, [r7, #4]
 8001242:	4a18      	ldr	r2, [pc, #96]	; (80012a4 <MCAL_USART_ReciveData+0x8c>)
 8001244:	4293      	cmp	r3, r2
 8001246:	d101      	bne.n	800124c <MCAL_USART_ReciveData+0x34>
 8001248:	4b17      	ldr	r3, [pc, #92]	; (80012a8 <MCAL_USART_ReciveData+0x90>)
 800124a:	60fb      	str	r3, [r7, #12]
 800124c:	68fb      	ldr	r3, [r7, #12]
 800124e:	799b      	ldrb	r3, [r3, #6]
 8001250:	2b00      	cmp	r3, #0
 8001252:	d107      	bne.n	8001264 <MCAL_USART_ReciveData+0x4c>
 8001254:	bf00      	nop
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	681b      	ldr	r3, [r3, #0]
 800125a:	f003 0320 	and.w	r3, r3, #32
 800125e:	2b00      	cmp	r3, #0
 8001260:	d0f9      	beq.n	8001256 <MCAL_USART_ReciveData+0x3e>
 8001262:	e002      	b.n	800126a <MCAL_USART_ReciveData+0x52>
 8001264:	68fb      	ldr	r3, [r7, #12]
 8001266:	799b      	ldrb	r3, [r3, #6]
 8001268:	2b01      	cmp	r3, #1
 800126a:	68fb      	ldr	r3, [r7, #12]
 800126c:	795b      	ldrb	r3, [r3, #5]
 800126e:	2b00      	cmp	r3, #0
 8001270:	d104      	bne.n	800127c <MCAL_USART_ReciveData+0x64>
 8001272:	687b      	ldr	r3, [r7, #4]
 8001274:	685b      	ldr	r3, [r3, #4]
 8001276:	b2db      	uxtb	r3, r3
 8001278:	b29b      	uxth	r3, r3
 800127a:	e006      	b.n	800128a <MCAL_USART_ReciveData+0x72>
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	685b      	ldr	r3, [r3, #4]
 8001280:	b2db      	uxtb	r3, r3
 8001282:	b29b      	uxth	r3, r3
 8001284:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001288:	b29b      	uxth	r3, r3
 800128a:	4618      	mov	r0, r3
 800128c:	3714      	adds	r7, #20
 800128e:	46bd      	mov	sp, r7
 8001290:	bc80      	pop	{r7}
 8001292:	4770      	bx	lr
 8001294:	40013800 	.word	0x40013800
 8001298:	200002b0 	.word	0x200002b0
 800129c:	40004400 	.word	0x40004400
 80012a0:	200002c0 	.word	0x200002c0
 80012a4:	40004800 	.word	0x40004800
 80012a8:	200002d0 	.word	0x200002d0

080012ac <SET_GPIO>:
 80012ac:	b580      	push	{r7, lr}
 80012ae:	b084      	sub	sp, #16
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	6078      	str	r0, [r7, #4]
 80012b4:	4b2c      	ldr	r3, [pc, #176]	; (8001368 <SET_GPIO+0xbc>)
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	60fb      	str	r3, [r7, #12]
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	4a2b      	ldr	r2, [pc, #172]	; (800136c <SET_GPIO+0xc0>)
 80012be:	4293      	cmp	r3, r2
 80012c0:	d115      	bne.n	80012ee <SET_GPIO+0x42>
 80012c2:	4b2b      	ldr	r3, [pc, #172]	; (8001370 <SET_GPIO+0xc4>)
 80012c4:	699b      	ldr	r3, [r3, #24]
 80012c6:	4a2a      	ldr	r2, [pc, #168]	; (8001370 <SET_GPIO+0xc4>)
 80012c8:	f043 0304 	orr.w	r3, r3, #4
 80012cc:	6193      	str	r3, [r2, #24]
 80012ce:	f107 030c 	add.w	r3, r7, #12
 80012d2:	4619      	mov	r1, r3
 80012d4:	4827      	ldr	r0, [pc, #156]	; (8001374 <SET_GPIO+0xc8>)
 80012d6:	f7ff faf1 	bl	80008bc <MCAL_GPIO_init>
 80012da:	4b27      	ldr	r3, [pc, #156]	; (8001378 <SET_GPIO+0xcc>)
 80012dc:	681b      	ldr	r3, [r3, #0]
 80012de:	60fb      	str	r3, [r7, #12]
 80012e0:	f107 030c 	add.w	r3, r7, #12
 80012e4:	4619      	mov	r1, r3
 80012e6:	4823      	ldr	r0, [pc, #140]	; (8001374 <SET_GPIO+0xc8>)
 80012e8:	f7ff fae8 	bl	80008bc <MCAL_GPIO_init>
 80012ec:	e038      	b.n	8001360 <SET_GPIO+0xb4>
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	4a22      	ldr	r2, [pc, #136]	; (800137c <SET_GPIO+0xd0>)
 80012f2:	4293      	cmp	r3, r2
 80012f4:	d118      	bne.n	8001328 <SET_GPIO+0x7c>
 80012f6:	4b1e      	ldr	r3, [pc, #120]	; (8001370 <SET_GPIO+0xc4>)
 80012f8:	699b      	ldr	r3, [r3, #24]
 80012fa:	4a1d      	ldr	r2, [pc, #116]	; (8001370 <SET_GPIO+0xc4>)
 80012fc:	f043 0304 	orr.w	r3, r3, #4
 8001300:	6193      	str	r3, [r2, #24]
 8001302:	4b1f      	ldr	r3, [pc, #124]	; (8001380 <SET_GPIO+0xd4>)
 8001304:	681b      	ldr	r3, [r3, #0]
 8001306:	60fb      	str	r3, [r7, #12]
 8001308:	f107 030c 	add.w	r3, r7, #12
 800130c:	4619      	mov	r1, r3
 800130e:	4819      	ldr	r0, [pc, #100]	; (8001374 <SET_GPIO+0xc8>)
 8001310:	f7ff fad4 	bl	80008bc <MCAL_GPIO_init>
 8001314:	4b1b      	ldr	r3, [pc, #108]	; (8001384 <SET_GPIO+0xd8>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	60fb      	str	r3, [r7, #12]
 800131a:	f107 030c 	add.w	r3, r7, #12
 800131e:	4619      	mov	r1, r3
 8001320:	4814      	ldr	r0, [pc, #80]	; (8001374 <SET_GPIO+0xc8>)
 8001322:	f7ff facb 	bl	80008bc <MCAL_GPIO_init>
 8001326:	e01b      	b.n	8001360 <SET_GPIO+0xb4>
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	4a17      	ldr	r2, [pc, #92]	; (8001388 <SET_GPIO+0xdc>)
 800132c:	4293      	cmp	r3, r2
 800132e:	d117      	bne.n	8001360 <SET_GPIO+0xb4>
 8001330:	4b0f      	ldr	r3, [pc, #60]	; (8001370 <SET_GPIO+0xc4>)
 8001332:	699b      	ldr	r3, [r3, #24]
 8001334:	4a0e      	ldr	r2, [pc, #56]	; (8001370 <SET_GPIO+0xc4>)
 8001336:	f043 0308 	orr.w	r3, r3, #8
 800133a:	6193      	str	r3, [r2, #24]
 800133c:	4b13      	ldr	r3, [pc, #76]	; (800138c <SET_GPIO+0xe0>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	60fb      	str	r3, [r7, #12]
 8001342:	f107 030c 	add.w	r3, r7, #12
 8001346:	4619      	mov	r1, r3
 8001348:	4811      	ldr	r0, [pc, #68]	; (8001390 <SET_GPIO+0xe4>)
 800134a:	f7ff fab7 	bl	80008bc <MCAL_GPIO_init>
 800134e:	4b11      	ldr	r3, [pc, #68]	; (8001394 <SET_GPIO+0xe8>)
 8001350:	681b      	ldr	r3, [r3, #0]
 8001352:	60fb      	str	r3, [r7, #12]
 8001354:	f107 030c 	add.w	r3, r7, #12
 8001358:	4619      	mov	r1, r3
 800135a:	480d      	ldr	r0, [pc, #52]	; (8001390 <SET_GPIO+0xe4>)
 800135c:	f7ff faae 	bl	80008bc <MCAL_GPIO_init>
 8001360:	bf00      	nop
 8001362:	3710      	adds	r7, #16
 8001364:	46bd      	mov	sp, r7
 8001366:	bd80      	pop	{r7, pc}
 8001368:	08001798 	.word	0x08001798
 800136c:	40013800 	.word	0x40013800
 8001370:	40021000 	.word	0x40021000
 8001374:	40010800 	.word	0x40010800
 8001378:	0800179c 	.word	0x0800179c
 800137c:	40004400 	.word	0x40004400
 8001380:	080017a0 	.word	0x080017a0
 8001384:	080017a4 	.word	0x080017a4
 8001388:	40004800 	.word	0x40004800
 800138c:	080017a8 	.word	0x080017a8
 8001390:	40010c00 	.word	0x40010c00
 8001394:	080017ac 	.word	0x080017ac

08001398 <USART1_IRQHandler>:
 8001398:	b580      	push	{r7, lr}
 800139a:	af00      	add	r7, sp, #0
 800139c:	4b05      	ldr	r3, [pc, #20]	; (80013b4 <USART1_IRQHandler+0x1c>)
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	f003 0320 	and.w	r3, r3, #32
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	d002      	beq.n	80013ae <USART1_IRQHandler+0x16>
 80013a8:	4b03      	ldr	r3, [pc, #12]	; (80013b8 <USART1_IRQHandler+0x20>)
 80013aa:	68db      	ldr	r3, [r3, #12]
 80013ac:	4798      	blx	r3
 80013ae:	bf00      	nop
 80013b0:	bd80      	pop	{r7, pc}
 80013b2:	bf00      	nop
 80013b4:	40013800 	.word	0x40013800
 80013b8:	200002b0 	.word	0x200002b0

080013bc <USART2_IRQHandler>:
 80013bc:	b580      	push	{r7, lr}
 80013be:	af00      	add	r7, sp, #0
 80013c0:	4b05      	ldr	r3, [pc, #20]	; (80013d8 <USART2_IRQHandler+0x1c>)
 80013c2:	681b      	ldr	r3, [r3, #0]
 80013c4:	f003 0320 	and.w	r3, r3, #32
 80013c8:	2b00      	cmp	r3, #0
 80013ca:	d002      	beq.n	80013d2 <USART2_IRQHandler+0x16>
 80013cc:	4b03      	ldr	r3, [pc, #12]	; (80013dc <USART2_IRQHandler+0x20>)
 80013ce:	69db      	ldr	r3, [r3, #28]
 80013d0:	4798      	blx	r3
 80013d2:	bf00      	nop
 80013d4:	bd80      	pop	{r7, pc}
 80013d6:	bf00      	nop
 80013d8:	40004400 	.word	0x40004400
 80013dc:	200002b0 	.word	0x200002b0

080013e0 <USART3_IRQHandler>:
 80013e0:	b580      	push	{r7, lr}
 80013e2:	af00      	add	r7, sp, #0
 80013e4:	4b05      	ldr	r3, [pc, #20]	; (80013fc <USART3_IRQHandler+0x1c>)
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	f003 0320 	and.w	r3, r3, #32
 80013ec:	2b00      	cmp	r3, #0
 80013ee:	d002      	beq.n	80013f6 <USART3_IRQHandler+0x16>
 80013f0:	4b03      	ldr	r3, [pc, #12]	; (8001400 <USART3_IRQHandler+0x20>)
 80013f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80013f4:	4798      	blx	r3
 80013f6:	bf00      	nop
 80013f8:	bd80      	pop	{r7, pc}
 80013fa:	bf00      	nop
 80013fc:	40004800 	.word	0x40004800
 8001400:	200002b0 	.word	0x200002b0

08001404 <main>:
void HW_init();
void ERROR_HANDLER() { while(1); }
void isr_uart();

int main(void)
{
 8001404:	b580      	push	{r7, lr}
 8001406:	af00      	add	r7, sp, #0
	HW_init();
 8001408:	f000 f802 	bl	8001410 <HW_init>
	while(1)
 800140c:	e7fe      	b.n	800140c <main+0x8>
	...

08001410 <HW_init>:

	}
}

void HW_init()
{
 8001410:	b580      	push	{r7, lr}
 8001412:	af00      	add	r7, sp, #0
	RCC_GPIOA_CLK_EN();
 8001414:	4b2e      	ldr	r3, [pc, #184]	; (80014d0 <HW_init+0xc0>)
 8001416:	699b      	ldr	r3, [r3, #24]
 8001418:	4a2d      	ldr	r2, [pc, #180]	; (80014d0 <HW_init+0xc0>)
 800141a:	f043 0304 	orr.w	r3, r3, #4
 800141e:	6193      	str	r3, [r2, #24]
	RCC_GPIOB_CLK_EN();
 8001420:	4b2b      	ldr	r3, [pc, #172]	; (80014d0 <HW_init+0xc0>)
 8001422:	699b      	ldr	r3, [r3, #24]
 8001424:	4a2a      	ldr	r2, [pc, #168]	; (80014d0 <HW_init+0xc0>)
 8001426:	f043 0308 	orr.w	r3, r3, #8
 800142a:	6193      	str	r3, [r2, #24]
	RCC_GPIOC_CLK_EN();
 800142c:	4b28      	ldr	r3, [pc, #160]	; (80014d0 <HW_init+0xc0>)
 800142e:	699b      	ldr	r3, [r3, #24]
 8001430:	4a27      	ldr	r2, [pc, #156]	; (80014d0 <HW_init+0xc0>)
 8001432:	f043 0310 	orr.w	r3, r3, #16
 8001436:	6193      	str	r3, [r2, #24]
	RCC_AFIO_CLK_EN();
 8001438:	4b25      	ldr	r3, [pc, #148]	; (80014d0 <HW_init+0xc0>)
 800143a:	699b      	ldr	r3, [r3, #24]
 800143c:	4a24      	ldr	r2, [pc, #144]	; (80014d0 <HW_init+0xc0>)
 800143e:	f043 0301 	orr.w	r3, r3, #1
 8001442:	6193      	str	r3, [r2, #24]
	RCC_USART1_CLK_EN();
 8001444:	4b22      	ldr	r3, [pc, #136]	; (80014d0 <HW_init+0xc0>)
 8001446:	699b      	ldr	r3, [r3, #24]
 8001448:	4a21      	ldr	r2, [pc, #132]	; (80014d0 <HW_init+0xc0>)
 800144a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800144e:	6193      	str	r3, [r2, #24]
	RCC_USART2_CLK_EN();
 8001450:	4b1f      	ldr	r3, [pc, #124]	; (80014d0 <HW_init+0xc0>)
 8001452:	69db      	ldr	r3, [r3, #28]
 8001454:	4a1e      	ldr	r2, [pc, #120]	; (80014d0 <HW_init+0xc0>)
 8001456:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800145a:	61d3      	str	r3, [r2, #28]
	RCC_USART3_CLK_EN();
 800145c:	4b1c      	ldr	r3, [pc, #112]	; (80014d0 <HW_init+0xc0>)
 800145e:	69db      	ldr	r3, [r3, #28]
 8001460:	4a1b      	ldr	r2, [pc, #108]	; (80014d0 <HW_init+0xc0>)
 8001462:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001466:	61d3      	str	r3, [r2, #28]
	dc_motor_initialize(&Fan1);
 8001468:	481a      	ldr	r0, [pc, #104]	; (80014d4 <HW_init+0xc4>)
 800146a:	f7ff f881 	bl	8000570 <dc_motor_initialize>
	dc_motor_initialize(&Fan2);
 800146e:	481a      	ldr	r0, [pc, #104]	; (80014d8 <HW_init+0xc8>)
 8001470:	f7ff f87e 	bl	8000570 <dc_motor_initialize>
	dc_motor_initialize(&Heater1);
 8001474:	4819      	ldr	r0, [pc, #100]	; (80014dc <HW_init+0xcc>)
 8001476:	f7ff f87b 	bl	8000570 <dc_motor_initialize>
	dc_motor_initialize(&Heater2);
 800147a:	4819      	ldr	r0, [pc, #100]	; (80014e0 <HW_init+0xd0>)
 800147c:	f7ff f878 	bl	8000570 <dc_motor_initialize>
	dc_motor_initialize(&Pump1);
 8001480:	4818      	ldr	r0, [pc, #96]	; (80014e4 <HW_init+0xd4>)
 8001482:	f7ff f875 	bl	8000570 <dc_motor_initialize>
	dc_motor_initialize(&Pump2);
 8001486:	4818      	ldr	r0, [pc, #96]	; (80014e8 <HW_init+0xd8>)
 8001488:	f7ff f872 	bl	8000570 <dc_motor_initialize>
	HAL_LCD_INIT();
 800148c:	f7fe ff3d 	bl	800030a <HAL_LCD_INIT>
	_Uart1.Baud_Rate = 19200;
 8001490:	4b16      	ldr	r3, [pc, #88]	; (80014ec <HW_init+0xdc>)
 8001492:	f44f 4296 	mov.w	r2, #19200	; 0x4b00
 8001496:	601a      	str	r2, [r3, #0]
	_Uart1.Word = EGHIT_BITS;  // Check if this is correctly defined in your header
 8001498:	4b14      	ldr	r3, [pc, #80]	; (80014ec <HW_init+0xdc>)
 800149a:	2200      	movs	r2, #0
 800149c:	711a      	strb	r2, [r3, #4]
	_Uart1.STOP = ONE_STOP_BIT;
 800149e:	4b13      	ldr	r3, [pc, #76]	; (80014ec <HW_init+0xdc>)
 80014a0:	2200      	movs	r2, #0
 80014a2:	71da      	strb	r2, [r3, #7]
	_Uart1.Parity = Parity_DISABLE;
 80014a4:	4b11      	ldr	r3, [pc, #68]	; (80014ec <HW_init+0xdc>)
 80014a6:	2200      	movs	r2, #0
 80014a8:	715a      	strb	r2, [r3, #5]
	_Uart1.MODE = Asynchronous;
 80014aa:	4b10      	ldr	r3, [pc, #64]	; (80014ec <HW_init+0xdc>)
 80014ac:	2200      	movs	r2, #0
 80014ae:	725a      	strb	r2, [r3, #9]
	_Uart1.MEC = Interrupt;
 80014b0:	4b0e      	ldr	r3, [pc, #56]	; (80014ec <HW_init+0xdc>)
 80014b2:	2201      	movs	r2, #1
 80014b4:	719a      	strb	r2, [r3, #6]
	_Uart1.HW = Disabled;
 80014b6:	4b0d      	ldr	r3, [pc, #52]	; (80014ec <HW_init+0xdc>)
 80014b8:	2200      	movs	r2, #0
 80014ba:	721a      	strb	r2, [r3, #8]
	_Uart1.P_Call_Back = isr_uart;
 80014bc:	4b0b      	ldr	r3, [pc, #44]	; (80014ec <HW_init+0xdc>)
 80014be:	4a0c      	ldr	r2, [pc, #48]	; (80014f0 <HW_init+0xe0>)
 80014c0:	60da      	str	r2, [r3, #12]
	MCAL_USART_init(USART1, &_Uart1);
 80014c2:	490a      	ldr	r1, [pc, #40]	; (80014ec <HW_init+0xdc>)
 80014c4:	480b      	ldr	r0, [pc, #44]	; (80014f4 <HW_init+0xe4>)
 80014c6:	f7ff fd3f 	bl	8000f48 <MCAL_USART_init>
}
 80014ca:	bf00      	nop
 80014cc:	bd80      	pop	{r7, pc}
 80014ce:	bf00      	nop
 80014d0:	40021000 	.word	0x40021000
 80014d4:	2000001c 	.word	0x2000001c
 80014d8:	20000028 	.word	0x20000028
 80014dc:	2000004c 	.word	0x2000004c
 80014e0:	20000058 	.word	0x20000058
 80014e4:	20000034 	.word	0x20000034
 80014e8:	20000040 	.word	0x20000040
 80014ec:	200002e0 	.word	0x200002e0
 80014f0:	080014f9 	.word	0x080014f9
 80014f4:	40013800 	.word	0x40013800

080014f8 <isr_uart>:
void isr_uart()
{
 80014f8:	b580      	push	{r7, lr}
 80014fa:	b082      	sub	sp, #8
 80014fc:	af00      	add	r7, sp, #0
	uint8_t letter = MCAL_USART_ReciveData(USART1);
 80014fe:	4867      	ldr	r0, [pc, #412]	; (800169c <isr_uart+0x1a4>)
 8001500:	f7ff fe8a 	bl	8001218 <MCAL_USART_ReciveData>
 8001504:	4603      	mov	r3, r0
 8001506:	71fb      	strb	r3, [r7, #7]
	switch (letter) {
 8001508:	79fb      	ldrb	r3, [r7, #7]
 800150a:	3b61      	subs	r3, #97	; 0x61
 800150c:	2b19      	cmp	r3, #25
 800150e:	f200 80a7 	bhi.w	8001660 <isr_uart+0x168>
 8001512:	a201      	add	r2, pc, #4	; (adr r2, 8001518 <isr_uart+0x20>)
 8001514:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001518:	08001581 	.word	0x08001581
 800151c:	08001597 	.word	0x08001597
 8001520:	080015ad 	.word	0x080015ad
 8001524:	080015bd 	.word	0x080015bd
 8001528:	080015cd 	.word	0x080015cd
 800152c:	080015e3 	.word	0x080015e3
 8001530:	080015f9 	.word	0x080015f9
 8001534:	0800160f 	.word	0x0800160f
 8001538:	08001661 	.word	0x08001661
 800153c:	08001625 	.word	0x08001625
 8001540:	0800163b 	.word	0x0800163b
 8001544:	08001661 	.word	0x08001661
 8001548:	08001661 	.word	0x08001661
 800154c:	08001661 	.word	0x08001661
 8001550:	08001661 	.word	0x08001661
 8001554:	08001661 	.word	0x08001661
 8001558:	08001661 	.word	0x08001661
 800155c:	08001661 	.word	0x08001661
 8001560:	08001661 	.word	0x08001661
 8001564:	08001661 	.word	0x08001661
 8001568:	08001661 	.word	0x08001661
 800156c:	08001661 	.word	0x08001661
 8001570:	08001661 	.word	0x08001661
 8001574:	08001661 	.word	0x08001661
 8001578:	08001661 	.word	0x08001661
 800157c:	08001651 	.word	0x08001651
	case 'a':
		dc_motor_move_right(&Pump1);
 8001580:	4847      	ldr	r0, [pc, #284]	; (80016a0 <isr_uart+0x1a8>)
 8001582:	f7ff f80d 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 8001586:	2101      	movs	r1, #1
 8001588:	2001      	movs	r0, #1
 800158a:	f7fe fe9a 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("===============FIRE RIGHT===============");
 800158e:	4845      	ldr	r0, [pc, #276]	; (80016a4 <isr_uart+0x1ac>)
 8001590:	f7fe ffc2 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 8001594:	e065      	b.n	8001662 <isr_uart+0x16a>

	case 'b':
		dc_motor_move_right(&Pump2);
 8001596:	4844      	ldr	r0, [pc, #272]	; (80016a8 <isr_uart+0x1b0>)
 8001598:	f7ff f802 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 800159c:	2101      	movs	r1, #1
 800159e:	2001      	movs	r0, #1
 80015a0:	f7fe fe8f 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("================FIRE LEFT===============");
 80015a4:	4841      	ldr	r0, [pc, #260]	; (80016ac <isr_uart+0x1b4>)
 80015a6:	f7fe ffb7 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 80015aa:	e05a      	b.n	8001662 <isr_uart+0x16a>

	case 'c':
		HAL_LCD_GOTO_XY(1, 1);
 80015ac:	2101      	movs	r1, #1
 80015ae:	2001      	movs	r0, #1
 80015b0:	f7fe fe87 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("================Gas RIGHT===============");
 80015b4:	483e      	ldr	r0, [pc, #248]	; (80016b0 <isr_uart+0x1b8>)
 80015b6:	f7fe ffaf 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 80015ba:	e052      	b.n	8001662 <isr_uart+0x16a>

	case 'd':
		HAL_LCD_GOTO_XY(1, 1);
 80015bc:	2101      	movs	r1, #1
 80015be:	2001      	movs	r0, #1
 80015c0:	f7fe fe7f 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("================Gas LEFT================");
 80015c4:	483b      	ldr	r0, [pc, #236]	; (80016b4 <isr_uart+0x1bc>)
 80015c6:	f7fe ffa7 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 80015ca:	e04a      	b.n	8001662 <isr_uart+0x16a>

	case 'e':
		dc_motor_move_right(&Fan1);
 80015cc:	483a      	ldr	r0, [pc, #232]	; (80016b8 <isr_uart+0x1c0>)
 80015ce:	f7fe ffe7 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 80015d2:	2101      	movs	r1, #1
 80015d4:	2001      	movs	r0, #1
 80015d6:	f7fe fe74 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("============Weather Hot Right===========");
 80015da:	4838      	ldr	r0, [pc, #224]	; (80016bc <isr_uart+0x1c4>)
 80015dc:	f7fe ff9c 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 80015e0:	e03f      	b.n	8001662 <isr_uart+0x16a>

	case 'f':
		dc_motor_move_right(&Heater1);
 80015e2:	4837      	ldr	r0, [pc, #220]	; (80016c0 <isr_uart+0x1c8>)
 80015e4:	f7fe ffdc 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 80015e8:	2101      	movs	r1, #1
 80015ea:	2001      	movs	r0, #1
 80015ec:	f7fe fe69 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("===========Weather Cold Right===========");
 80015f0:	4834      	ldr	r0, [pc, #208]	; (80016c4 <isr_uart+0x1cc>)
 80015f2:	f7fe ff91 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 80015f6:	e034      	b.n	8001662 <isr_uart+0x16a>

	case 'g':
		dc_motor_move_right(&Fan2);
 80015f8:	4833      	ldr	r0, [pc, #204]	; (80016c8 <isr_uart+0x1d0>)
 80015fa:	f7fe ffd1 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 80015fe:	2101      	movs	r1, #1
 8001600:	2001      	movs	r0, #1
 8001602:	f7fe fe5e 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("============Weather Hot Left============");
 8001606:	4831      	ldr	r0, [pc, #196]	; (80016cc <isr_uart+0x1d4>)
 8001608:	f7fe ff86 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 800160c:	e029      	b.n	8001662 <isr_uart+0x16a>

	case 'h':
		dc_motor_move_right(&Heater2);
 800160e:	4830      	ldr	r0, [pc, #192]	; (80016d0 <isr_uart+0x1d8>)
 8001610:	f7fe ffc6 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 8001614:	2101      	movs	r1, #1
 8001616:	2001      	movs	r0, #1
 8001618:	f7fe fe53 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("============Weather Cold Left===========");
 800161c:	482d      	ldr	r0, [pc, #180]	; (80016d4 <isr_uart+0x1dc>)
 800161e:	f7fe ff7b 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 8001622:	e01e      	b.n	8001662 <isr_uart+0x16a>

	case 'j':
		dc_motor_move_right(&Pump1);
 8001624:	481e      	ldr	r0, [pc, #120]	; (80016a0 <isr_uart+0x1a8>)
 8001626:	f7fe ffbb 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 800162a:	2101      	movs	r1, #1
 800162c:	2001      	movs	r0, #1
 800162e:	f7fe fe48 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("===========Water Leakage Right==========");
 8001632:	4829      	ldr	r0, [pc, #164]	; (80016d8 <isr_uart+0x1e0>)
 8001634:	f7fe ff70 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 8001638:	e013      	b.n	8001662 <isr_uart+0x16a>

	case 'k':
		dc_motor_move_right(&Pump2);
 800163a:	481b      	ldr	r0, [pc, #108]	; (80016a8 <isr_uart+0x1b0>)
 800163c:	f7fe ffb0 	bl	80005a0 <dc_motor_move_right>
		HAL_LCD_GOTO_XY(1, 1);
 8001640:	2101      	movs	r1, #1
 8001642:	2001      	movs	r0, #1
 8001644:	f7fe fe3d 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("===========Water Leakage Left==========");
 8001648:	4824      	ldr	r0, [pc, #144]	; (80016dc <isr_uart+0x1e4>)
 800164a:	f7fe ff65 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 800164e:	e008      	b.n	8001662 <isr_uart+0x16a>
	case 'z' :
		HAL_LCD_GOTO_XY(1, 1);
 8001650:	2101      	movs	r1, #1
 8001652:	2001      	movs	r0, #1
 8001654:	f7fe fe35 	bl	80002c2 <HAL_LCD_GOTO_XY>
		HAL_LCD_WRITE_STRING("===========EVERY Thing Is Okey==========");
 8001658:	4821      	ldr	r0, [pc, #132]	; (80016e0 <isr_uart+0x1e8>)
 800165a:	f7fe ff5d 	bl	8000518 <HAL_LCD_WRITE_STRING>
		break;
 800165e:	e000      	b.n	8001662 <isr_uart+0x16a>
	default :
		break;
 8001660:	bf00      	nop
	}
	dc_motor_stop(&Heater2);
 8001662:	481b      	ldr	r0, [pc, #108]	; (80016d0 <isr_uart+0x1d8>)
 8001664:	f7fe ffb6 	bl	80005d4 <dc_motor_stop>
	dc_motor_stop(&Heater2);
 8001668:	4819      	ldr	r0, [pc, #100]	; (80016d0 <isr_uart+0x1d8>)
 800166a:	f7fe ffb3 	bl	80005d4 <dc_motor_stop>
	dc_motor_stop(&Heater2);
 800166e:	4818      	ldr	r0, [pc, #96]	; (80016d0 <isr_uart+0x1d8>)
 8001670:	f7fe ffb0 	bl	80005d4 <dc_motor_stop>
	dc_motor_stop(&Fan2);
 8001674:	4814      	ldr	r0, [pc, #80]	; (80016c8 <isr_uart+0x1d0>)
 8001676:	f7fe ffad 	bl	80005d4 <dc_motor_stop>
	dc_motor_stop(&Heater1);
 800167a:	4811      	ldr	r0, [pc, #68]	; (80016c0 <isr_uart+0x1c8>)
 800167c:	f7fe ffaa 	bl	80005d4 <dc_motor_stop>
	dc_motor_stop(&Fan1);
 8001680:	480d      	ldr	r0, [pc, #52]	; (80016b8 <isr_uart+0x1c0>)
 8001682:	f7fe ffa7 	bl	80005d4 <dc_motor_stop>
	dc_motor_stop(&Pump1);
 8001686:	4806      	ldr	r0, [pc, #24]	; (80016a0 <isr_uart+0x1a8>)
 8001688:	f7fe ffa4 	bl	80005d4 <dc_motor_stop>
	dc_motor_stop(&Pump2);
 800168c:	4806      	ldr	r0, [pc, #24]	; (80016a8 <isr_uart+0x1b0>)
 800168e:	f7fe ffa1 	bl	80005d4 <dc_motor_stop>
}
 8001692:	bf00      	nop
 8001694:	3708      	adds	r7, #8
 8001696:	46bd      	mov	sp, r7
 8001698:	bd80      	pop	{r7, pc}
 800169a:	bf00      	nop
 800169c:	40013800 	.word	0x40013800
 80016a0:	20000034 	.word	0x20000034
 80016a4:	080017b0 	.word	0x080017b0
 80016a8:	20000040 	.word	0x20000040
 80016ac:	080017dc 	.word	0x080017dc
 80016b0:	08001808 	.word	0x08001808
 80016b4:	08001834 	.word	0x08001834
 80016b8:	2000001c 	.word	0x2000001c
 80016bc:	08001860 	.word	0x08001860
 80016c0:	2000004c 	.word	0x2000004c
 80016c4:	0800188c 	.word	0x0800188c
 80016c8:	20000028 	.word	0x20000028
 80016cc:	080018b8 	.word	0x080018b8
 80016d0:	20000058 	.word	0x20000058
 80016d4:	080018e4 	.word	0x080018e4
 80016d8:	08001910 	.word	0x08001910
 80016dc:	0800193c 	.word	0x0800193c
 80016e0:	08001964 	.word	0x08001964

080016e4 <Reset_Handler>:
 80016e4:	480d      	ldr	r0, [pc, #52]	; (800171c <LoopForever+0x2>)
 80016e6:	4685      	mov	sp, r0
 80016e8:	f3af 8000 	nop.w
 80016ec:	480c      	ldr	r0, [pc, #48]	; (8001720 <LoopForever+0x6>)
 80016ee:	490d      	ldr	r1, [pc, #52]	; (8001724 <LoopForever+0xa>)
 80016f0:	4a0d      	ldr	r2, [pc, #52]	; (8001728 <LoopForever+0xe>)
 80016f2:	2300      	movs	r3, #0
 80016f4:	e002      	b.n	80016fc <LoopCopyDataInit>

080016f6 <CopyDataInit>:
 80016f6:	58d4      	ldr	r4, [r2, r3]
 80016f8:	50c4      	str	r4, [r0, r3]
 80016fa:	3304      	adds	r3, #4

080016fc <LoopCopyDataInit>:
 80016fc:	18c4      	adds	r4, r0, r3
 80016fe:	428c      	cmp	r4, r1
 8001700:	d3f9      	bcc.n	80016f6 <CopyDataInit>
 8001702:	4a0a      	ldr	r2, [pc, #40]	; (800172c <LoopForever+0x12>)
 8001704:	4c0a      	ldr	r4, [pc, #40]	; (8001730 <LoopForever+0x16>)
 8001706:	2300      	movs	r3, #0
 8001708:	e001      	b.n	800170e <LoopFillZerobss>

0800170a <FillZerobss>:
 800170a:	6013      	str	r3, [r2, #0]
 800170c:	3204      	adds	r2, #4

0800170e <LoopFillZerobss>:
 800170e:	42a2      	cmp	r2, r4
 8001710:	d3fb      	bcc.n	800170a <FillZerobss>
 8001712:	f000 f811 	bl	8001738 <__libc_init_array>
 8001716:	f7ff fe75 	bl	8001404 <main>

0800171a <LoopForever>:
 800171a:	e7fe      	b.n	800171a <LoopForever>
 800171c:	20005000 	.word	0x20005000
 8001720:	20000000 	.word	0x20000000
 8001724:	20000064 	.word	0x20000064
 8001728:	08001998 	.word	0x08001998
 800172c:	20000064 	.word	0x20000064
 8001730:	200002f0 	.word	0x200002f0

08001734 <ADC3_IRQHandler>:
 8001734:	e7fe      	b.n	8001734 <ADC3_IRQHandler>
	...

08001738 <__libc_init_array>:
 8001738:	b570      	push	{r4, r5, r6, lr}
 800173a:	2500      	movs	r5, #0
 800173c:	4e0c      	ldr	r6, [pc, #48]	; (8001770 <__libc_init_array+0x38>)
 800173e:	4c0d      	ldr	r4, [pc, #52]	; (8001774 <__libc_init_array+0x3c>)
 8001740:	1ba4      	subs	r4, r4, r6
 8001742:	10a4      	asrs	r4, r4, #2
 8001744:	42a5      	cmp	r5, r4
 8001746:	d109      	bne.n	800175c <__libc_init_array+0x24>
 8001748:	f000 f81a 	bl	8001780 <_init>
 800174c:	2500      	movs	r5, #0
 800174e:	4e0a      	ldr	r6, [pc, #40]	; (8001778 <__libc_init_array+0x40>)
 8001750:	4c0a      	ldr	r4, [pc, #40]	; (800177c <__libc_init_array+0x44>)
 8001752:	1ba4      	subs	r4, r4, r6
 8001754:	10a4      	asrs	r4, r4, #2
 8001756:	42a5      	cmp	r5, r4
 8001758:	d105      	bne.n	8001766 <__libc_init_array+0x2e>
 800175a:	bd70      	pop	{r4, r5, r6, pc}
 800175c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001760:	4798      	blx	r3
 8001762:	3501      	adds	r5, #1
 8001764:	e7ee      	b.n	8001744 <__libc_init_array+0xc>
 8001766:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800176a:	4798      	blx	r3
 800176c:	3501      	adds	r5, #1
 800176e:	e7f2      	b.n	8001756 <__libc_init_array+0x1e>
 8001770:	08001990 	.word	0x08001990
 8001774:	08001990 	.word	0x08001990
 8001778:	08001990 	.word	0x08001990
 800177c:	08001994 	.word	0x08001994

08001780 <_init>:
 8001780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001782:	bf00      	nop
 8001784:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001786:	bc08      	pop	{r3}
 8001788:	469e      	mov	lr, r3
 800178a:	4770      	bx	lr

0800178c <_fini>:
 800178c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800178e:	bf00      	nop
 8001790:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001792:	bc08      	pop	{r3}
 8001794:	469e      	mov	lr, r3
 8001796:	4770      	bx	lr
